<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="81" tests="441" time="0.0">
	<testsuite disabled="0" errors="0" failures="81" name="mutmut" skipped="0" tests="441" time="0">
		<testcase name="Mutant #1" file="src/pytest_sort/database.py" line="11">
			<system-out>database_file = Path.cwd() / &quot;.pytest_sort&quot;</system-out>
		</testcase>
		<testcase name="Mutant #2" file="src/pytest_sort/database.py" line="11">
			<system-out>database_file = Path.cwd() / &quot;.pytest_sort&quot;</system-out>
		</testcase>
		<testcase name="Mutant #3" file="src/pytest_sort/database.py" line="11">
			<system-out>database_file = Path.cwd() / &quot;.pytest_sort&quot;</system-out>
		</testcase>
		<testcase name="Mutant #4" file="src/pytest_sort/database.py" line="12">
			<system-out>db = Database()</system-out>
		</testcase>
		<testcase name="Mutant #5" file="src/pytest_sort/database.py" line="18">
			<system-out>    nodeid = PrimaryKey(str)</system-out>
		</testcase>
		<testcase name="Mutant #6" file="src/pytest_sort/database.py" line="19">
			<system-out>    setup = Required(int, size=64)</system-out>
		</testcase>
		<testcase name="Mutant #7" file="src/pytest_sort/database.py" line="19">
			<system-out>    setup = Required(int, size=64)</system-out>
		</testcase>
		<testcase name="Mutant #8" file="src/pytest_sort/database.py" line="20">
			<system-out>    call = Required(int, size=64)</system-out>
		</testcase>
		<testcase name="Mutant #9" file="src/pytest_sort/database.py" line="20">
			<system-out>    call = Required(int, size=64)</system-out>
		</testcase>
		<testcase name="Mutant #10" file="src/pytest_sort/database.py" line="21">
			<system-out>    teardown = Required(int, size=64)</system-out>
		</testcase>
		<testcase name="Mutant #11" file="src/pytest_sort/database.py" line="21">
			<system-out>    teardown = Required(int, size=64)</system-out>
		</testcase>
		<testcase name="Mutant #12" file="src/pytest_sort/database.py" line="22">
			<system-out>    total = Required(int, size=64)</system-out>
		</testcase>
		<testcase name="Mutant #13" file="src/pytest_sort/database.py" line="22">
			<system-out>    total = Required(int, size=64)</system-out>
		</testcase>
		<testcase name="Mutant #14" file="src/pytest_sort/database.py" line="30">
			<system-out>        if not db.provider:</system-out>
		</testcase>
		<testcase name="Mutant #15" file="src/pytest_sort/database.py" line="31">
			<system-out>            db.bind(provider=&quot;sqlite&quot;, filename=str(database_file), create_db=True)</system-out>
		</testcase>
		<testcase name="Mutant #16" file="src/pytest_sort/database.py" line="31">
			<system-out>            db.bind(provider=&quot;sqlite&quot;, filename=str(database_file), create_db=True)</system-out>
		</testcase>
		<testcase name="Mutant #17" file="src/pytest_sort/database.py" line="33">
			<system-out>                db.generate_mapping(create_tables=True)</system-out>
		</testcase>
		<testcase name="Mutant #18" file="src/pytest_sort/database.py" line="35">
			<system-out>                db.drop_all_tables(with_all_data=True)</system-out>
		</testcase>
		<testcase name="Mutant #19" file="src/pytest_sort/database.py" line="36">
			<system-out>                db.schema = None  # Pony will only rebuild build tables if this is None</system-out>
		</testcase>
		<testcase name="Mutant #20" file="src/pytest_sort/database.py" line="37">
			<system-out>                db.generate_mapping(create_tables=True)</system-out>
		</testcase>
		<testcase name="Mutant #21" file="src/pytest_sort/database.py" line="43">
			<system-out>@_init_db</system-out>
		</testcase>
		<testcase name="Mutant #22" file="src/pytest_sort/database.py" line="46">
			<system-out>    db.drop_all_tables(with_all_data=True)</system-out>
		</testcase>
		<testcase name="Mutant #23" file="src/pytest_sort/database.py" line="47">
			<system-out>    db.schema = None  # Pony will only rebuild build tables if this is None</system-out>
		</testcase>
		<testcase name="Mutant #24" file="src/pytest_sort/database.py" line="48">
			<system-out>    db.generate_mapping(create_tables=True)</system-out>
		</testcase>
		<testcase name="Mutant #25" file="src/pytest_sort/database.py" line="51">
			<system-out>@_init_db</system-out>
		</testcase>
		<testcase name="Mutant #26" file="src/pytest_sort/database.py" line="52">
			<system-out>@db_session</system-out>
		</testcase>
		<testcase name="Mutant #27" file="src/pytest_sort/database.py" line="53">
			<system-out>def update_test_case(nodeid: str, setup: int = 0, call: int = 0, teardown: int = 0) -&gt; None:</system-out>
		</testcase>
		<testcase name="Mutant #28" file="src/pytest_sort/database.py" line="53">
			<system-out>def update_test_case(nodeid: str, setup: int = 0, call: int = 0, teardown: int = 0) -&gt; None:</system-out>
		</testcase>
		<testcase name="Mutant #29" file="src/pytest_sort/database.py" line="53">
			<system-out>def update_test_case(nodeid: str, setup: int = 0, call: int = 0, teardown: int = 0) -&gt; None:</system-out>
		</testcase>
		<testcase name="Mutant #30" file="src/pytest_sort/database.py" line="55">
			<system-out>    test: TestTab = TestTab.get(nodeid=nodeid)</system-out>
		</testcase>
		<testcase name="Mutant #31" file="src/pytest_sort/database.py" line="56">
			<system-out>    if not test:</system-out>
		</testcase>
		<testcase name="Mutant #32" file="src/pytest_sort/database.py" line="57">
			<system-out>        TestTab(nodeid=nodeid, setup=setup, call=call, teardown=teardown, total=setup + call + teardown)</system-out>
		</testcase>
		<testcase name="Mutant #33" file="src/pytest_sort/database.py" line="57">
			<system-out>        TestTab(nodeid=nodeid, setup=setup, call=call, teardown=teardown, total=setup + call + teardown)</system-out>
		</testcase>
		<testcase name="Mutant #34" file="src/pytest_sort/database.py" line="59">
			<system-out>        if test.setup &lt; setup:</system-out>
		</testcase>
		<testcase name="Mutant #35" file="src/pytest_sort/database.py" line="60">
			<system-out>            test.setup = setup</system-out>
		</testcase>
		<testcase name="Mutant #36" file="src/pytest_sort/database.py" line="61">
			<system-out>        if test.call &lt; call:</system-out>
		</testcase>
		<testcase name="Mutant #37" file="src/pytest_sort/database.py" line="62">
			<system-out>            test.call = call</system-out>
		</testcase>
		<testcase name="Mutant #38" file="src/pytest_sort/database.py" line="63">
			<system-out>        if test.teardown &lt; teardown:</system-out>
		</testcase>
		<testcase name="Mutant #39" file="src/pytest_sort/database.py" line="64">
			<system-out>            test.teardown = teardown</system-out>
		</testcase>
		<testcase name="Mutant #40" file="src/pytest_sort/database.py" line="65">
			<system-out>        total = test.setup + test.call + test.teardown</system-out>
		</testcase>
		<testcase name="Mutant #41" file="src/pytest_sort/database.py" line="65">
			<system-out>        total = test.setup + test.call + test.teardown</system-out>
		</testcase>
		<testcase name="Mutant #42" file="src/pytest_sort/database.py" line="65">
			<system-out>        total = test.setup + test.call + test.teardown</system-out>
		</testcase>
		<testcase name="Mutant #43" file="src/pytest_sort/database.py" line="66">
			<system-out>        if test.total &lt; total:</system-out>
		</testcase>
		<testcase name="Mutant #44" file="src/pytest_sort/database.py" line="67">
			<system-out>            test.total = total</system-out>
		</testcase>
		<testcase name="Mutant #45" file="src/pytest_sort/database.py" line="70">
			<system-out>@_init_db</system-out>
		</testcase>
		<testcase name="Mutant #46" file="src/pytest_sort/database.py" line="71">
			<system-out>@db_session</system-out>
		</testcase>
		<testcase name="Mutant #47" file="src/pytest_sort/database.py" line="74">
			<system-out>    test: TestTab = TestTab.get(nodeid=nodeid)</system-out>
		</testcase>
		<testcase name="Mutant #48" file="src/pytest_sort/database.py" line="75">
			<system-out>    if not test:</system-out>
		</testcase>
		<testcase name="Mutant #49" file="src/pytest_sort/database.py" line="76">
			<system-out>        return 0</system-out>
		</testcase>
		<testcase name="Mutant #50" file="src/pytest_sort/database.py" line="80">
			<system-out>@_init_db</system-out>
		</testcase>
		<testcase name="Mutant #51" file="src/pytest_sort/database.py" line="81">
			<system-out>@db_session</system-out>
		</testcase>
		<testcase name="Mutant #52" file="src/pytest_sort/database.py" line="84">
			<system-out>    tests: list[TestTab] = TestTab.select(lambda _: True)</system-out>
		</testcase>
		<testcase name="Mutant #53" file="src/pytest_sort/database.py" line="84">
			<system-out>    tests: list[TestTab] = TestTab.select(lambda _: True)</system-out>
		</testcase>
		<testcase name="Mutant #54" file="src/pytest_sort/database.py" line="84">
			<system-out>    tests: list[TestTab] = TestTab.select(lambda _: True)</system-out>
		</testcase>
		<testcase name="Mutant #55" file="src/pytest_sort/database.py" line="88">
			<system-out>@_init_db</system-out>
		</testcase>
		<testcase name="Mutant #56" file="src/pytest_sort/database.py" line="89">
			<system-out>@db_session</system-out>
		</testcase>
		<testcase name="Mutant #57" file="src/pytest_sort/database.py" line="92">
			<system-out>    tests: TestTab = TestTab.select(lambda t: bucket_id in t.nodeid)</system-out>
		</testcase>
		<testcase name="Mutant #58" file="src/pytest_sort/database.py" line="92">
			<system-out>    tests: TestTab = TestTab.select(lambda t: bucket_id in t.nodeid)</system-out>
		</testcase>
		<testcase name="Mutant #59" file="src/pytest_sort/database.py" line="92">
			<system-out>    tests: TestTab = TestTab.select(lambda t: bucket_id in t.nodeid)</system-out>
		</testcase>
		<testcase name="Mutant #60" file="src/pytest_sort/database.py" line="97">
			<system-out>@_init_db</system-out>
		</testcase>
		<testcase name="Mutant #61" file="src/pytest_sort/database.py" line="98">
			<system-out>@db_session</system-out>
		</testcase>
		<testcase name="Mutant #62" file="src/pytest_sort/database.py" line="101">
			<system-out>    test = TestTab.get(nodeid=nodeid)</system-out>
		</testcase>
		<testcase name="Mutant #63" file="src/pytest_sort/database.py" line="102">
			<system-out>    if not test:</system-out>
		</testcase>
		<testcase name="Mutant #64" file="src/pytest_sort/database.py" line="104">
			<system-out>            &quot;setup&quot;: 0,</system-out>
		</testcase>
		<testcase name="Mutant #65" file="src/pytest_sort/database.py" line="104">
			<system-out>            &quot;setup&quot;: 0,</system-out>
		</testcase>
		<testcase name="Mutant #66" file="src/pytest_sort/database.py" line="105">
			<system-out>            &quot;call&quot;: 0,</system-out>
		</testcase>
		<testcase name="Mutant #67" file="src/pytest_sort/database.py" line="105">
			<system-out>            &quot;call&quot;: 0,</system-out>
		</testcase>
		<testcase name="Mutant #68" file="src/pytest_sort/database.py" line="106">
			<system-out>            &quot;teardown&quot;: 0,</system-out>
		</testcase>
		<testcase name="Mutant #69" file="src/pytest_sort/database.py" line="106">
			<system-out>            &quot;teardown&quot;: 0,</system-out>
		</testcase>
		<testcase name="Mutant #70" file="src/pytest_sort/database.py" line="107">
			<system-out>            &quot;total&quot;: 0,</system-out>
		</testcase>
		<testcase name="Mutant #71" file="src/pytest_sort/database.py" line="107">
			<system-out>            &quot;total&quot;: 0,</system-out>
		</testcase>
		<testcase name="Mutant #72" file="src/pytest_sort/database.py" line="110">
			<system-out>        &quot;setup&quot;: test.setup,</system-out>
		</testcase>
		<testcase name="Mutant #73" file="src/pytest_sort/database.py" line="111">
			<system-out>        &quot;call&quot;: test.call,</system-out>
		</testcase>
		<testcase name="Mutant #74" file="src/pytest_sort/database.py" line="112">
			<system-out>        &quot;teardown&quot;: test.teardown,</system-out>
		</testcase>
		<testcase name="Mutant #75" file="src/pytest_sort/database.py" line="113">
			<system-out>        &quot;total&quot;: test.total,</system-out>
		</testcase>
		<testcase name="Mutant #76" file="src/pytest_sort/core.py" line="29">
			<system-out>        return node.nodeid.replace(&quot;__init__.py&quot;, &quot;&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #77" file="src/pytest_sort/core.py" line="29">
			<system-out>        return node.nodeid.replace(&quot;__init__.py&quot;, &quot;&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #78" file="src/pytest_sort/core.py" line="34">
			<system-out>    return &quot;&quot;</system-out>
		</testcase>
		<testcase name="Mutant #79" file="src/pytest_sort/core.py" line="45">
			<system-out>    return &quot;&quot;</system-out>
		</testcase>
		<testcase name="Mutant #80" file="src/pytest_sort/core.py" line="56">
			<system-out>    return &quot;&quot;</system-out>
		</testcase>
		<testcase name="Mutant #81" file="src/pytest_sort/core.py" line="67">
			<system-out>    return &quot;&quot;</system-out>
		</testcase>
		<testcase name="Mutant #82" file="src/pytest_sort/core.py" line="71">
			<system-out>    &quot;session&quot;: lambda item: &quot;&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #83" file="src/pytest_sort/core.py" line="71">
			<system-out>    &quot;session&quot;: lambda item: &quot;&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #84" file="src/pytest_sort/core.py" line="71">
			<system-out>    &quot;session&quot;: lambda item: &quot;&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #85" file="src/pytest_sort/core.py" line="72">
			<system-out>    &quot;package&quot;: create_bucket_id_for_package,</system-out>
		</testcase>
		<testcase name="Mutant #86" file="src/pytest_sort/core.py" line="73">
			<system-out>    &quot;module&quot;: create_bucket_id_for_module,</system-out>
		</testcase>
		<testcase name="Mutant #87" file="src/pytest_sort/core.py" line="74">
			<system-out>    &quot;class&quot;: create_bucket_id_for_class,</system-out>
		</testcase>
		<testcase name="Mutant #88" file="src/pytest_sort/core.py" line="75">
			<system-out>    &quot;parent&quot;: lambda item: create_bucket_id_from_node(item.parent),</system-out>
		</testcase>
		<testcase name="Mutant #89" file="src/pytest_sort/core.py" line="75">
			<system-out>    &quot;parent&quot;: lambda item: create_bucket_id_from_node(item.parent),</system-out>
		</testcase>
		<testcase name="Mutant #90" file="src/pytest_sort/core.py" line="76">
			<system-out>    &quot;grandparent&quot;: lambda item: create_bucket_id_from_node(item.parent.parent),</system-out>
		</testcase>
		<testcase name="Mutant #91" file="src/pytest_sort/core.py" line="76">
			<system-out>    &quot;grandparent&quot;: lambda item: create_bucket_id_from_node(item.parent.parent),</system-out>
		</testcase>
		<testcase name="Mutant #92" file="src/pytest_sort/core.py" line="77">
			<system-out>}</system-out>
		</testcase>
		<testcase name="Mutant #93" file="src/pytest_sort/core.py" line="80">
			<system-out>    &quot;ordered&quot;: lambda item, idx, count: idx + 1,</system-out>
		</testcase>
		<testcase name="Mutant #94" file="src/pytest_sort/core.py" line="80">
			<system-out>    &quot;ordered&quot;: lambda item, idx, count: idx + 1,</system-out>
		</testcase>
		<testcase name="Mutant #95" file="src/pytest_sort/core.py" line="80">
			<system-out>    &quot;ordered&quot;: lambda item, idx, count: idx + 1,</system-out>
		</testcase>
		<testcase name="Mutant #96" file="src/pytest_sort/core.py" line="80">
			<system-out>    &quot;ordered&quot;: lambda item, idx, count: idx + 1,</system-out>
		</testcase>
		<testcase name="Mutant #97" file="src/pytest_sort/core.py" line="81">
			<system-out>    &quot;reverse&quot;: lambda item, idx, count: count - idx,</system-out>
		</testcase>
		<testcase name="Mutant #98" file="src/pytest_sort/core.py" line="81">
			<system-out>    &quot;reverse&quot;: lambda item, idx, count: count - idx,</system-out>
		</testcase>
		<testcase name="Mutant #99" file="src/pytest_sort/core.py" line="81">
			<system-out>    &quot;reverse&quot;: lambda item, idx, count: count - idx,</system-out>
		</testcase>
		<testcase name="Mutant #100" file="src/pytest_sort/core.py" line="82">
			<system-out>    &quot;md5&quot;: lambda item, idx, count: md5(item.nodeid.encode()).digest(),</system-out>
		</testcase>
		<testcase name="Mutant #101" file="src/pytest_sort/core.py" line="82">
			<system-out>    &quot;md5&quot;: lambda item, idx, count: md5(item.nodeid.encode()).digest(),</system-out>
		</testcase>
		<testcase name="Mutant #102" file="src/pytest_sort/core.py" line="83">
			<system-out>    &quot;random&quot;: lambda item, idx, count: random.random(),</system-out>
		</testcase>
		<testcase name="Mutant #103" file="src/pytest_sort/core.py" line="83">
			<system-out>    &quot;random&quot;: lambda item, idx, count: random.random(),</system-out>
		</testcase>
		<testcase name="Mutant #104" file="src/pytest_sort/core.py" line="84">
			<system-out>    &quot;fastest&quot;: lambda item, idx, count: SortConfig.item_totals.get(item.nodeid, 0),</system-out>
		</testcase>
		<testcase name="Mutant #105" file="src/pytest_sort/core.py" line="84">
			<system-out>    &quot;fastest&quot;: lambda item, idx, count: SortConfig.item_totals.get(item.nodeid, 0),</system-out>
		</testcase>
		<testcase name="Mutant #106" file="src/pytest_sort/core.py" line="84">
			<system-out>    &quot;fastest&quot;: lambda item, idx, count: SortConfig.item_totals.get(item.nodeid, 0),</system-out>
		</testcase>
		<testcase name="Mutant #107" file="src/pytest_sort/core.py" line="85">
			<system-out>}</system-out>
		</testcase>
		<testcase name="Mutant #108" file="src/pytest_sort/core.py" line="94">
			<system-out>    &quot;ordered&quot;: lambda bucket_id, idx, count: idx + 1,</system-out>
		</testcase>
		<testcase name="Mutant #109" file="src/pytest_sort/core.py" line="94">
			<system-out>    &quot;ordered&quot;: lambda bucket_id, idx, count: idx + 1,</system-out>
		</testcase>
		<testcase name="Mutant #110" file="src/pytest_sort/core.py" line="94">
			<system-out>    &quot;ordered&quot;: lambda bucket_id, idx, count: idx + 1,</system-out>
		</testcase>
		<testcase name="Mutant #111" file="src/pytest_sort/core.py" line="94">
			<system-out>    &quot;ordered&quot;: lambda bucket_id, idx, count: idx + 1,</system-out>
		</testcase>
		<testcase name="Mutant #112" file="src/pytest_sort/core.py" line="95">
			<system-out>    &quot;reverse&quot;: lambda bucket_id, idx, count: count - idx,</system-out>
		</testcase>
		<testcase name="Mutant #113" file="src/pytest_sort/core.py" line="95">
			<system-out>    &quot;reverse&quot;: lambda bucket_id, idx, count: count - idx,</system-out>
		</testcase>
		<testcase name="Mutant #114" file="src/pytest_sort/core.py" line="95">
			<system-out>    &quot;reverse&quot;: lambda bucket_id, idx, count: count - idx,</system-out>
		</testcase>
		<testcase name="Mutant #115" file="src/pytest_sort/core.py" line="96">
			<system-out>    &quot;md5&quot;: lambda bucket_id, idx, count: md5(bucket_id.encode()).digest(),</system-out>
		</testcase>
		<testcase name="Mutant #116" file="src/pytest_sort/core.py" line="96">
			<system-out>    &quot;md5&quot;: lambda bucket_id, idx, count: md5(bucket_id.encode()).digest(),</system-out>
		</testcase>
		<testcase name="Mutant #117" file="src/pytest_sort/core.py" line="97">
			<system-out>    &quot;random&quot;: lambda bucket_id, idx, count: random.random(),</system-out>
		</testcase>
		<testcase name="Mutant #118" file="src/pytest_sort/core.py" line="97">
			<system-out>    &quot;random&quot;: lambda bucket_id, idx, count: random.random(),</system-out>
		</testcase>
		<testcase name="Mutant #119" file="src/pytest_sort/core.py" line="98">
			<system-out>    &quot;fastest&quot;: lambda bucket_id, idx, count: get_bucket_total(bucket_id),</system-out>
		</testcase>
		<testcase name="Mutant #120" file="src/pytest_sort/core.py" line="98">
			<system-out>    &quot;fastest&quot;: lambda bucket_id, idx, count: get_bucket_total(bucket_id),</system-out>
		</testcase>
		<testcase name="Mutant #121" file="src/pytest_sort/core.py" line="99">
			<system-out>}</system-out>
		</testcase>
		<testcase name="Mutant #122" file="src/pytest_sort/core.py" line="114">
			<system-out>        msg = f&quot;Incorrect arguments on marker 'order'. Target:{node_id}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #123" file="src/pytest_sort/core.py" line="114">
			<system-out>        msg = f&quot;Incorrect arguments on marker 'order'. Target:{node_id}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #124" file="src/pytest_sort/core.py" line="124">
			<system-out>    def mark_sort_parse(mode: str, bucket: str = &quot;self&quot;) -&gt; tuple:</system-out>
		</testcase>
		<testcase name="Mutant #125" file="src/pytest_sort/core.py" line="128">
			<system-out>        (mode, bucket_temp) = mark_sort_parse(*sort_marker.args, **sort_marker.kwargs)</system-out>
		</testcase>
		<testcase name="Mutant #126" file="src/pytest_sort/core.py" line="130">
			<system-out>        msg = f&quot;Incorrect arguments on marker 'sort'. Target:{node_id}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #127" file="src/pytest_sort/core.py" line="130">
			<system-out>        msg = f&quot;Incorrect arguments on marker 'sort'. Target:{node_id}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #128" file="src/pytest_sort/core.py" line="133">
			<system-out>    if mode not in create_item_key:</system-out>
		</testcase>
		<testcase name="Mutant #129" file="src/pytest_sort/core.py" line="134">
			<system-out>        msg = f&quot;Invalid Value for 'mode' on 'sort' marker. Value:{mode} Target:{node_id}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #130" file="src/pytest_sort/core.py" line="134">
			<system-out>        msg = f&quot;Invalid Value for 'mode' on 'sort' marker. Value:{mode} Target:{node_id}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #131" file="src/pytest_sort/core.py" line="147">
			<system-out>    mode = None</system-out>
		</testcase>
		<testcase name="Mutant #132" file="src/pytest_sort/core.py" line="148">
			<system-out>    bucket = None</system-out>
		</testcase>
		<testcase name="Mutant #133" file="src/pytest_sort/core.py" line="149">
			<system-out>    bucket_id = None</system-out>
		</testcase>
		<testcase name="Mutant #134" file="src/pytest_sort/core.py" line="150">
			<system-out>    sort_key = None</system-out>
		</testcase>
		<testcase name="Mutant #135" file="src/pytest_sort/core.py" line="152">
			<system-out>    node_id = node.nodeid</system-out>
		</testcase>
		<testcase name="Mutant #136" file="src/pytest_sort/core.py" line="155">
			<system-out>        (mode, bucket, bucket_id, sort_key) = get_marker_settings(node.parent)</system-out>
		</testcase>
		<testcase name="Mutant #137" file="src/pytest_sort/core.py" line="157">
			<system-out>    for order in node.iter_markers(&quot;order&quot;):</system-out>
		</testcase>
		<testcase name="Mutant #138" file="src/pytest_sort/core.py" line="158">
			<system-out>        sort_key = validate_order_marker(order, node_id)</system-out>
		</testcase>
		<testcase name="Mutant #139" file="src/pytest_sort/core.py" line="160">
			<system-out>    for sort in node.iter_markers(&quot;sort&quot;):</system-out>
		</testcase>
		<testcase name="Mutant #140" file="src/pytest_sort/core.py" line="161">
			<system-out>        (mode, bucket_temp) = validate_sort_marker(sort, node_id)</system-out>
		</testcase>
		<testcase name="Mutant #141" file="src/pytest_sort/core.py" line="163">
			<system-out>        if bucket_temp == &quot;self&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #142" file="src/pytest_sort/core.py" line="163">
			<system-out>        if bucket_temp == &quot;self&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #143" file="src/pytest_sort/core.py" line="164">
			<system-out>            bucket_id = create_bucket_id_from_node(node)</system-out>
		</testcase>
		<testcase name="Mutant #144" file="src/pytest_sort/core.py" line="165">
			<system-out>        elif bucket_temp in create_bucket_id:</system-out>
		</testcase>
		<testcase name="Mutant #145" file="src/pytest_sort/core.py" line="166">
			<system-out>            bucket = bucket_temp</system-out>
		</testcase>
		<testcase name="Mutant #146" file="src/pytest_sort/core.py" line="167">
			<system-out>            bucket_id = None</system-out>
		</testcase>
		<testcase name="Mutant #147" file="src/pytest_sort/core.py" line="169">
			<system-out>            msg = f&quot;Invalid Value for 'bucket' on 'sort' marker: {bucket_temp}. Target: {node_id}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #148" file="src/pytest_sort/core.py" line="169">
			<system-out>            msg = f&quot;Invalid Value for 'bucket' on 'sort' marker: {bucket_temp}. Target: {node_id}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #149" file="src/pytest_sort/core.py" line="180">
			<system-out>    (mode, bucket, bucket_id, sort_key) = get_marker_settings(item)</system-out>
		</testcase>
		<testcase name="Mutant #150" file="src/pytest_sort/core.py" line="182">
			<system-out>    SortConfig.item_sort_keys[item.nodeid] = sort_key or create_item_key[mode or SortConfig.mode](item, idx, count)</system-out>
		</testcase>
		<testcase name="Mutant #151" file="src/pytest_sort/core.py" line="182">
			<system-out>    SortConfig.item_sort_keys[item.nodeid] = sort_key or create_item_key[mode or SortConfig.mode](item, idx, count)</system-out>
		</testcase>
		<testcase name="Mutant #152" file="src/pytest_sort/core.py" line="182">
			<system-out>    SortConfig.item_sort_keys[item.nodeid] = sort_key or create_item_key[mode or SortConfig.mode](item, idx, count)</system-out>
		</testcase>
		<testcase name="Mutant #153" file="src/pytest_sort/core.py" line="184">
			<system-out>    bucket_id = bucket_id or create_bucket_id[bucket or SortConfig.bucket](item)</system-out>
		</testcase>
		<testcase name="Mutant #154" file="src/pytest_sort/core.py" line="184">
			<system-out>    bucket_id = bucket_id or create_bucket_id[bucket or SortConfig.bucket](item)</system-out>
		</testcase>
		<testcase name="Mutant #155" file="src/pytest_sort/core.py" line="184">
			<system-out>    bucket_id = bucket_id or create_bucket_id[bucket or SortConfig.bucket](item)</system-out>
		</testcase>
		<testcase name="Mutant #156" file="src/pytest_sort/core.py" line="185">
			<system-out>    SortConfig.item_bucket_id[item.nodeid] = bucket_id</system-out>
		</testcase>
		<testcase name="Mutant #157" file="src/pytest_sort/core.py" line="187">
			<system-out>    bucket_key = create_bucket_key[SortConfig.bucket_mode](bucket_id, idx, count)</system-out>
		</testcase>
		<testcase name="Mutant #158" file="src/pytest_sort/core.py" line="188">
			<system-out>    if bucket_id in SortConfig.bucket_sort_keys:</system-out>
		</testcase>
		<testcase name="Mutant #159" file="src/pytest_sort/core.py" line="189">
			<system-out>        SortConfig.bucket_sort_keys[bucket_id] = min(SortConfig.bucket_sort_keys[bucket_id], bucket_key)</system-out>
		</testcase>
		<testcase name="Mutant #160" file="src/pytest_sort/core.py" line="191">
			<system-out>        SortConfig.bucket_sort_keys[bucket_id] = bucket_key</system-out>
		</testcase>
		<testcase name="Mutant #161" file="src/pytest_sort/core.py" line="196">
			<system-out>    node_id = item.nodeid</system-out>
		</testcase>
		<testcase name="Mutant #162" file="src/pytest_sort/core.py" line="197">
			<system-out>    bucket_id = SortConfig.item_bucket_id[node_id]</system-out>
		</testcase>
		<testcase name="Mutant #163" file="src/pytest_sort/core.py" line="203">
			<system-out>    if SortConfig.mode == &quot;random&quot; or SortConfig.bucket_mode == &quot;random&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #164" file="src/pytest_sort/core.py" line="203">
			<system-out>    if SortConfig.mode == &quot;random&quot; or SortConfig.bucket_mode == &quot;random&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #165" file="src/pytest_sort/core.py" line="203">
			<system-out>    if SortConfig.mode == &quot;random&quot; or SortConfig.bucket_mode == &quot;random&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #166" file="src/pytest_sort/core.py" line="203">
			<system-out>    if SortConfig.mode == &quot;random&quot; or SortConfig.bucket_mode == &quot;random&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #167" file="src/pytest_sort/core.py" line="203">
			<system-out>    if SortConfig.mode == &quot;random&quot; or SortConfig.bucket_mode == &quot;random&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #168" file="src/pytest_sort/core.py" line="206">
			<system-out>    if SortConfig.mode == &quot;fastest&quot; or SortConfig.bucket_mode == &quot;fastest&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #169" file="src/pytest_sort/core.py" line="206">
			<system-out>    if SortConfig.mode == &quot;fastest&quot; or SortConfig.bucket_mode == &quot;fastest&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #170" file="src/pytest_sort/core.py" line="206">
			<system-out>    if SortConfig.mode == &quot;fastest&quot; or SortConfig.bucket_mode == &quot;fastest&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #171" file="src/pytest_sort/core.py" line="206">
			<system-out>    if SortConfig.mode == &quot;fastest&quot; or SortConfig.bucket_mode == &quot;fastest&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #172" file="src/pytest_sort/core.py" line="206">
			<system-out>    if SortConfig.mode == &quot;fastest&quot; or SortConfig.bucket_mode == &quot;fastest&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #173" file="src/pytest_sort/core.py" line="207">
			<system-out>        SortConfig.item_totals = get_all_totals()</system-out>
		</testcase>
		<testcase name="Mutant #174" file="src/pytest_sort/core.py" line="215">
			<system-out>        print_test_case_order(items)</system-out>
		</testcase>
		<testcase name="Mutant #175" file="src/pytest_sort/core.py" line="220">
			<system-out>    nodeids = list({rpt.nodeid for rpt in terminal_reporter.stats[&quot;&quot;]})</system-out>
		</testcase>
		<testcase name="Mutant #176" file="src/pytest_sort/core.py" line="220">
			<system-out>    nodeids = list({rpt.nodeid for rpt in terminal_reporter.stats[&quot;&quot;]})</system-out>
		</testcase>
		<testcase name="Mutant #177" file="src/pytest_sort/core.py" line="223">
			<system-out>    node_id_width = max([len(nodeid) for nodeid in nodeids]) + 3</system-out>
		</testcase>
		<testcase name="Mutant #178" file="src/pytest_sort/core.py" line="223">
			<system-out>    node_id_width = max([len(nodeid) for nodeid in nodeids]) + 3</system-out>
		</testcase>
		<testcase name="Mutant #179" file="src/pytest_sort/core.py" line="223">
			<system-out>    node_id_width = max([len(nodeid) for nodeid in nodeids]) + 3</system-out>
		</testcase>
		<testcase name="Mutant #180" file="src/pytest_sort/core.py" line="224">
			<system-out>    stat_width = 16</system-out>
		</testcase>
		<testcase name="Mutant #181" file="src/pytest_sort/core.py" line="224">
			<system-out>    stat_width = 16</system-out>
		</testcase>
		<testcase name="Mutant #182" file="src/pytest_sort/core.py" line="227">
			<system-out>        f&quot;\n*** {'pytest-sort maximum recorded times'.ljust(node_id_width)}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #183" file="src/pytest_sort/core.py" line="227">
			<system-out>        f&quot;\n*** {'pytest-sort maximum recorded times'.ljust(node_id_width)}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #184" file="src/pytest_sort/core.py" line="228">
			<system-out>        f&quot;{'Nanoseconds'.center(stat_width*4 - 4)} ***&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #185" file="src/pytest_sort/core.py" line="228">
			<system-out>        f&quot;{'Nanoseconds'.center(stat_width*4 - 4)} ***&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #186" file="src/pytest_sort/core.py" line="228">
			<system-out>        f&quot;{'Nanoseconds'.center(stat_width*4 - 4)} ***&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #187" file="src/pytest_sort/core.py" line="228">
			<system-out>        f&quot;{'Nanoseconds'.center(stat_width*4 - 4)} ***&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #188" file="src/pytest_sort/core.py" line="228">
			<system-out>        f&quot;{'Nanoseconds'.center(stat_width*4 - 4)} ***&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #189" file="src/pytest_sort/core.py" line="228">
			<system-out>        f&quot;{'Nanoseconds'.center(stat_width*4 - 4)} ***&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #190" file="src/pytest_sort/core.py" line="231">
			<system-out>        f&quot;{'Test Case'.ljust(node_id_width)} {'setup'.rjust(stat_width)} &quot;</system-out>
		</testcase>
		<testcase name="Mutant #191" file="src/pytest_sort/core.py" line="231">
			<system-out>        f&quot;{'Test Case'.ljust(node_id_width)} {'setup'.rjust(stat_width)} &quot;</system-out>
		</testcase>
		<testcase name="Mutant #192" file="src/pytest_sort/core.py" line="231">
			<system-out>        f&quot;{'Test Case'.ljust(node_id_width)} {'setup'.rjust(stat_width)} &quot;</system-out>
		</testcase>
		<testcase name="Mutant #193" file="src/pytest_sort/core.py" line="232">
			<system-out>        f&quot;{'call'.rjust(stat_width)} {'teardown'.rjust(stat_width)} {'total'.rjust(stat_width)}&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #194" file="src/pytest_sort/core.py" line="232">
			<system-out>        f&quot;{'call'.rjust(stat_width)} {'teardown'.rjust(stat_width)} {'total'.rjust(stat_width)}&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #195" file="src/pytest_sort/core.py" line="232">
			<system-out>        f&quot;{'call'.rjust(stat_width)} {'teardown'.rjust(stat_width)} {'total'.rjust(stat_width)}&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #196" file="src/pytest_sort/core.py" line="232">
			<system-out>        f&quot;{'call'.rjust(stat_width)} {'teardown'.rjust(stat_width)} {'total'.rjust(stat_width)}&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #197" file="src/pytest_sort/core.py" line="235">
			<system-out>        stats = get_stats(nodeid)</system-out>
		</testcase>
		<testcase name="Mutant #198" file="src/pytest_sort/core.py" line="236">
			<system-out>        setup_ns = f&quot;{stats['setup']:,}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #199" file="src/pytest_sort/core.py" line="236">
			<system-out>        setup_ns = f&quot;{stats['setup']:,}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #200" file="src/pytest_sort/core.py" line="236">
			<system-out>        setup_ns = f&quot;{stats['setup']:,}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #201" file="src/pytest_sort/core.py" line="237">
			<system-out>        call_ns = f&quot;{stats['call']:,}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #202" file="src/pytest_sort/core.py" line="237">
			<system-out>        call_ns = f&quot;{stats['call']:,}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #203" file="src/pytest_sort/core.py" line="237">
			<system-out>        call_ns = f&quot;{stats['call']:,}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #204" file="src/pytest_sort/core.py" line="238">
			<system-out>        teardown_ns = f&quot;{stats['teardown']:,}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #205" file="src/pytest_sort/core.py" line="238">
			<system-out>        teardown_ns = f&quot;{stats['teardown']:,}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #206" file="src/pytest_sort/core.py" line="238">
			<system-out>        teardown_ns = f&quot;{stats['teardown']:,}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #207" file="src/pytest_sort/core.py" line="239">
			<system-out>        total_ns = f&quot;{stats['total']:,}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #208" file="src/pytest_sort/core.py" line="239">
			<system-out>        total_ns = f&quot;{stats['total']:,}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #209" file="src/pytest_sort/core.py" line="239">
			<system-out>        total_ns = f&quot;{stats['total']:,}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #210" file="src/pytest_sort/core.py" line="241">
			<system-out>            f&quot;{nodeid.ljust(node_id_width)} {setup_ns.rjust(stat_width)} &quot;</system-out>
		</testcase>
		<testcase name="Mutant #211" file="src/pytest_sort/core.py" line="242">
			<system-out>            f&quot;{call_ns.rjust(stat_width)} {teardown_ns.rjust(stat_width)} {total_ns.rjust(stat_width)}&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #212" file="src/pytest_sort/core.py" line="248">
			<system-out>    print(&quot;\nTest Case Order:&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #213" file="src/pytest_sort/core.py" line="249">
			<system-out>    print(&quot;(bucket_key, bucket_id, item_key, item_id)&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #214" file="src/pytest_sort/core.py" line="251">
			<system-out>        node_id = item.nodeid</system-out>
		</testcase>
		<testcase name="Mutant #215" file="src/pytest_sort/core.py" line="252">
			<system-out>        bucket_id = SortConfig.item_bucket_id[node_id]</system-out>
		</testcase>
		<testcase name="Mutant #216" file="src/pytest_sort/config.py" line="14">
			<system-out>modes = [&quot;ordered&quot;, &quot;reverse&quot;, &quot;md5&quot;, &quot;random&quot;, &quot;fastest&quot;, &quot;none&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #217" file="src/pytest_sort/config.py" line="14">
			<system-out>modes = [&quot;ordered&quot;, &quot;reverse&quot;, &quot;md5&quot;, &quot;random&quot;, &quot;fastest&quot;, &quot;none&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #218" file="src/pytest_sort/config.py" line="14">
			<system-out>modes = [&quot;ordered&quot;, &quot;reverse&quot;, &quot;md5&quot;, &quot;random&quot;, &quot;fastest&quot;, &quot;none&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #219" file="src/pytest_sort/config.py" line="14">
			<system-out>modes = [&quot;ordered&quot;, &quot;reverse&quot;, &quot;md5&quot;, &quot;random&quot;, &quot;fastest&quot;, &quot;none&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #220" file="src/pytest_sort/config.py" line="14">
			<system-out>modes = [&quot;ordered&quot;, &quot;reverse&quot;, &quot;md5&quot;, &quot;random&quot;, &quot;fastest&quot;, &quot;none&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #221" file="src/pytest_sort/config.py" line="14">
			<system-out>modes = [&quot;ordered&quot;, &quot;reverse&quot;, &quot;md5&quot;, &quot;random&quot;, &quot;fastest&quot;, &quot;none&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #222" file="src/pytest_sort/config.py" line="14">
			<system-out>modes = [&quot;ordered&quot;, &quot;reverse&quot;, &quot;md5&quot;, &quot;random&quot;, &quot;fastest&quot;, &quot;none&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #223" file="src/pytest_sort/config.py" line="15">
			<system-out>bucket_types = [&quot;session&quot;, &quot;package&quot;, &quot;module&quot;, &quot;class&quot;, &quot;parent&quot;, &quot;grandparent&quot;, &quot;global&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #224" file="src/pytest_sort/config.py" line="15">
			<system-out>bucket_types = [&quot;session&quot;, &quot;package&quot;, &quot;module&quot;, &quot;class&quot;, &quot;parent&quot;, &quot;grandparent&quot;, &quot;global&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #225" file="src/pytest_sort/config.py" line="15">
			<system-out>bucket_types = [&quot;session&quot;, &quot;package&quot;, &quot;module&quot;, &quot;class&quot;, &quot;parent&quot;, &quot;grandparent&quot;, &quot;global&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #226" file="src/pytest_sort/config.py" line="15">
			<system-out>bucket_types = [&quot;session&quot;, &quot;package&quot;, &quot;module&quot;, &quot;class&quot;, &quot;parent&quot;, &quot;grandparent&quot;, &quot;global&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #227" file="src/pytest_sort/config.py" line="15">
			<system-out>bucket_types = [&quot;session&quot;, &quot;package&quot;, &quot;module&quot;, &quot;class&quot;, &quot;parent&quot;, &quot;grandparent&quot;, &quot;global&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #228" file="src/pytest_sort/config.py" line="15">
			<system-out>bucket_types = [&quot;session&quot;, &quot;package&quot;, &quot;module&quot;, &quot;class&quot;, &quot;parent&quot;, &quot;grandparent&quot;, &quot;global&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #229" file="src/pytest_sort/config.py" line="15">
			<system-out>bucket_types = [&quot;session&quot;, &quot;package&quot;, &quot;module&quot;, &quot;class&quot;, &quot;parent&quot;, &quot;grandparent&quot;, &quot;global&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #230" file="src/pytest_sort/config.py" line="15">
			<system-out>bucket_types = [&quot;session&quot;, &quot;package&quot;, &quot;module&quot;, &quot;class&quot;, &quot;parent&quot;, &quot;grandparent&quot;, &quot;global&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #231" file="src/pytest_sort/config.py" line="18">
			<system-out>    &quot;none&quot;: &quot;ordered&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #232" file="src/pytest_sort/config.py" line="18">
			<system-out>    &quot;none&quot;: &quot;ordered&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #233" file="src/pytest_sort/config.py" line="19">
			<system-out>}</system-out>
		</testcase>
		<testcase name="Mutant #234" file="src/pytest_sort/config.py" line="21">
			<system-out>    &quot;global&quot;: &quot;session&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #235" file="src/pytest_sort/config.py" line="21">
			<system-out>    &quot;global&quot;: &quot;session&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #236" file="src/pytest_sort/config.py" line="22">
			<system-out>}</system-out>
		</testcase>
		<testcase name="Mutant #237" file="src/pytest_sort/config.py" line="28">
			<system-out>    mode: str = &quot;ordered&quot;</system-out>
		</testcase>
		<testcase name="Mutant #238" file="src/pytest_sort/config.py" line="28">
			<system-out>    mode: str = &quot;ordered&quot;</system-out>
		</testcase>
		<testcase name="Mutant #239" file="src/pytest_sort/config.py" line="29">
			<system-out>    bucket: str = &quot;parent&quot;</system-out>
		</testcase>
		<testcase name="Mutant #240" file="src/pytest_sort/config.py" line="29">
			<system-out>    bucket: str = &quot;parent&quot;</system-out>
		</testcase>
		<testcase name="Mutant #241" file="src/pytest_sort/config.py" line="30">
			<system-out>    bucket_mode: str = &quot;sort_mode&quot;</system-out>
		</testcase>
		<testcase name="Mutant #242" file="src/pytest_sort/config.py" line="30">
			<system-out>    bucket_mode: str = &quot;sort_mode&quot;</system-out>
		</testcase>
		<testcase name="Mutant #243" file="src/pytest_sort/config.py" line="32">
			<system-out>    reset: bool = False</system-out>
		</testcase>
		<testcase name="Mutant #244" file="src/pytest_sort/config.py" line="32">
			<system-out>    reset: bool = False</system-out>
		</testcase>
		<testcase name="Mutant #245" file="src/pytest_sort/config.py" line="33">
			<system-out>    report: bool = False</system-out>
		</testcase>
		<testcase name="Mutant #246" file="src/pytest_sort/config.py" line="33">
			<system-out>    report: bool = False</system-out>
		</testcase>
		<testcase name="Mutant #247" file="src/pytest_sort/config.py" line="35">
			<system-out>    seed = random.randint(0, 1_000_000)</system-out>
		</testcase>
		<testcase name="Mutant #248" file="src/pytest_sort/config.py" line="35">
			<system-out>    seed = random.randint(0, 1_000_000)</system-out>
		</testcase>
		<testcase name="Mutant #249" file="src/pytest_sort/config.py" line="35">
			<system-out>    seed = random.randint(0, 1_000_000)</system-out>
		</testcase>
		<testcase name="Mutant #250" file="src/pytest_sort/config.py" line="37">
			<system-out>    debug = False</system-out>
		</testcase>
		<testcase name="Mutant #251" file="src/pytest_sort/config.py" line="37">
			<system-out>    debug = False</system-out>
		</testcase>
		<testcase name="Mutant #252" file="src/pytest_sort/config.py" line="39">
			<system-out>    recorded_times: ClassVar[dict] = {}</system-out>
		</testcase>
		<testcase name="Mutant #253" file="src/pytest_sort/config.py" line="40">
			<system-out>    item_totals: ClassVar[dict] = {}</system-out>
		</testcase>
		<testcase name="Mutant #254" file="src/pytest_sort/config.py" line="41">
			<system-out>    item_sort_keys: ClassVar[dict] = {}</system-out>
		</testcase>
		<testcase name="Mutant #255" file="src/pytest_sort/config.py" line="42">
			<system-out>    item_bucket_id: ClassVar[dict] = {}</system-out>
		</testcase>
		<testcase name="Mutant #256" file="src/pytest_sort/config.py" line="43">
			<system-out>    bucket_sort_keys: ClassVar[dict] = {}</system-out>
		</testcase>
		<testcase name="Mutant #257" file="src/pytest_sort/config.py" line="45">
			<system-out>    @staticmethod</system-out>
		</testcase>
		<testcase name="Mutant #258" file="src/pytest_sort/config.py" line="53">
			<system-out>        SortConfig.reset = config.getoption(&quot;sort_reset_times&quot;, default=False)</system-out>
		</testcase>
		<testcase name="Mutant #259" file="src/pytest_sort/config.py" line="53">
			<system-out>        SortConfig.reset = config.getoption(&quot;sort_reset_times&quot;, default=False)</system-out>
		</testcase>
		<testcase name="Mutant #260" file="src/pytest_sort/config.py" line="53">
			<system-out>        SortConfig.reset = config.getoption(&quot;sort_reset_times&quot;, default=False)</system-out>
		</testcase>
		<testcase name="Mutant #261" file="src/pytest_sort/config.py" line="54">
			<system-out>        SortConfig.report = config.getoption(&quot;sort_report_times&quot;, default=False)</system-out>
		</testcase>
		<testcase name="Mutant #262" file="src/pytest_sort/config.py" line="54">
			<system-out>        SortConfig.report = config.getoption(&quot;sort_report_times&quot;, default=False)</system-out>
		</testcase>
		<testcase name="Mutant #263" file="src/pytest_sort/config.py" line="54">
			<system-out>        SortConfig.report = config.getoption(&quot;sort_report_times&quot;, default=False)</system-out>
		</testcase>
		<testcase name="Mutant #264" file="src/pytest_sort/config.py" line="59">
			<system-out>        if config.getoption(&quot;sort_debug&quot;):</system-out>
		</testcase>
		<testcase name="Mutant #265" file="src/pytest_sort/config.py" line="60">
			<system-out>            SortConfig.debug = True</system-out>
		</testcase>
		<testcase name="Mutant #266" file="src/pytest_sort/config.py" line="60">
			<system-out>            SortConfig.debug = True</system-out>
		</testcase>
		<testcase name="Mutant #267" file="src/pytest_sort/config.py" line="62">
			<system-out>    @staticmethod</system-out>
		</testcase>
		<testcase name="Mutant #268" file="src/pytest_sort/config.py" line="64">
			<system-out>        SortConfig.mode = config.getoption(&quot;sort_mode&quot;) or config.getini(&quot;sort_mode&quot;) or SortConfig.mode</system-out>
		</testcase>
		<testcase name="Mutant #269" file="src/pytest_sort/config.py" line="64">
			<system-out>        SortConfig.mode = config.getoption(&quot;sort_mode&quot;) or config.getini(&quot;sort_mode&quot;) or SortConfig.mode</system-out>
		</testcase>
		<testcase name="Mutant #270" file="src/pytest_sort/config.py" line="64">
			<system-out>        SortConfig.mode = config.getoption(&quot;sort_mode&quot;) or config.getini(&quot;sort_mode&quot;) or SortConfig.mode</system-out>
		</testcase>
		<testcase name="Mutant #271" file="src/pytest_sort/config.py" line="64">
			<system-out>        SortConfig.mode = config.getoption(&quot;sort_mode&quot;) or config.getini(&quot;sort_mode&quot;) or SortConfig.mode</system-out>
		</testcase>
		<testcase name="Mutant #272" file="src/pytest_sort/config.py" line="65">
			<system-out>        if SortConfig.mode not in modes:</system-out>
		</testcase>
		<testcase name="Mutant #273" file="src/pytest_sort/config.py" line="66">
			<system-out>            msg = f&quot;Invalid Value for sort-mode='{SortConfig.mode}'&quot;</system-out>
		</testcase>
		<testcase name="Mutant #274" file="src/pytest_sort/config.py" line="66">
			<system-out>            msg = f&quot;Invalid Value for sort-mode='{SortConfig.mode}'&quot;</system-out>
		</testcase>
		<testcase name="Mutant #275" file="src/pytest_sort/config.py" line="68">
			<system-out>        SortConfig.mode = legacy_modes.get(SortConfig.mode, SortConfig.mode)</system-out>
		</testcase>
		<testcase name="Mutant #276" file="src/pytest_sort/config.py" line="70">
			<system-out>    @staticmethod</system-out>
		</testcase>
		<testcase name="Mutant #277" file="src/pytest_sort/config.py" line="72">
			<system-out>        SortConfig.bucket = config.getoption(&quot;sort_bucket&quot;) or config.getini(&quot;sort_bucket&quot;) or SortConfig.bucket</system-out>
		</testcase>
		<testcase name="Mutant #278" file="src/pytest_sort/config.py" line="72">
			<system-out>        SortConfig.bucket = config.getoption(&quot;sort_bucket&quot;) or config.getini(&quot;sort_bucket&quot;) or SortConfig.bucket</system-out>
		</testcase>
		<testcase name="Mutant #279" file="src/pytest_sort/config.py" line="72">
			<system-out>        SortConfig.bucket = config.getoption(&quot;sort_bucket&quot;) or config.getini(&quot;sort_bucket&quot;) or SortConfig.bucket</system-out>
		</testcase>
		<testcase name="Mutant #280" file="src/pytest_sort/config.py" line="72">
			<system-out>        SortConfig.bucket = config.getoption(&quot;sort_bucket&quot;) or config.getini(&quot;sort_bucket&quot;) or SortConfig.bucket</system-out>
		</testcase>
		<testcase name="Mutant #281" file="src/pytest_sort/config.py" line="73">
			<system-out>        if SortConfig.bucket not in bucket_types:</system-out>
		</testcase>
		<testcase name="Mutant #282" file="src/pytest_sort/config.py" line="74">
			<system-out>            msg = f&quot;Invalid Value for sort-bucket='{SortConfig.bucket}'&quot;</system-out>
		</testcase>
		<testcase name="Mutant #283" file="src/pytest_sort/config.py" line="74">
			<system-out>            msg = f&quot;Invalid Value for sort-bucket='{SortConfig.bucket}'&quot;</system-out>
		</testcase>
		<testcase name="Mutant #284" file="src/pytest_sort/config.py" line="76">
			<system-out>        SortConfig.bucket = legacy_bucket_types.get(SortConfig.bucket, SortConfig.bucket)</system-out>
		</testcase>
		<testcase name="Mutant #285" file="src/pytest_sort/config.py" line="78">
			<system-out>    @staticmethod</system-out>
		</testcase>
		<testcase name="Mutant #286" file="src/pytest_sort/config.py" line="81">
			<system-out>            config.getoption(&quot;sort_bucket_mode&quot;) or config.getini(&quot;sort_bucket_mode&quot;) or SortConfig.bucket_mode</system-out>
		</testcase>
		<testcase name="Mutant #287" file="src/pytest_sort/config.py" line="81">
			<system-out>            config.getoption(&quot;sort_bucket_mode&quot;) or config.getini(&quot;sort_bucket_mode&quot;) or SortConfig.bucket_mode</system-out>
		</testcase>
		<testcase name="Mutant #288" file="src/pytest_sort/config.py" line="81">
			<system-out>            config.getoption(&quot;sort_bucket_mode&quot;) or config.getini(&quot;sort_bucket_mode&quot;) or SortConfig.bucket_mode</system-out>
		</testcase>
		<testcase name="Mutant #289" file="src/pytest_sort/config.py" line="82">
			<system-out>        )</system-out>
		</testcase>
		<testcase name="Mutant #290" file="src/pytest_sort/config.py" line="83">
			<system-out>        if SortConfig.bucket_mode == &quot;sort_mode&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #291" file="src/pytest_sort/config.py" line="83">
			<system-out>        if SortConfig.bucket_mode == &quot;sort_mode&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #292" file="src/pytest_sort/config.py" line="84">
			<system-out>            SortConfig.bucket_mode = SortConfig.mode</system-out>
		</testcase>
		<testcase name="Mutant #293" file="src/pytest_sort/config.py" line="85">
			<system-out>        if SortConfig.bucket_mode not in modes:</system-out>
		</testcase>
		<testcase name="Mutant #294" file="src/pytest_sort/config.py" line="86">
			<system-out>            msg = f&quot;Invalid Value for sort-bucket-mode='{SortConfig.bucket_mode}'&quot;</system-out>
		</testcase>
		<testcase name="Mutant #295" file="src/pytest_sort/config.py" line="86">
			<system-out>            msg = f&quot;Invalid Value for sort-bucket-mode='{SortConfig.bucket_mode}'&quot;</system-out>
		</testcase>
		<testcase name="Mutant #296" file="src/pytest_sort/config.py" line="88">
			<system-out>        SortConfig.bucket_mode = legacy_modes.get(SortConfig.bucket_mode, SortConfig.bucket_mode)</system-out>
		</testcase>
		<testcase name="Mutant #297" file="src/pytest_sort/config.py" line="90">
			<system-out>    @staticmethod</system-out>
		</testcase>
		<testcase name="Mutant #298" file="src/pytest_sort/config.py" line="92">
			<system-out>        if config.getoption(&quot;sort_no_record&quot;) and config.getoption(&quot;sort_record&quot;):</system-out>
		</testcase>
		<testcase name="Mutant #299" file="src/pytest_sort/config.py" line="92">
			<system-out>        if config.getoption(&quot;sort_no_record&quot;) and config.getoption(&quot;sort_record&quot;):</system-out>
		</testcase>
		<testcase name="Mutant #300" file="src/pytest_sort/config.py" line="92">
			<system-out>        if config.getoption(&quot;sort_no_record&quot;) and config.getoption(&quot;sort_record&quot;):</system-out>
		</testcase>
		<testcase name="Mutant #301" file="src/pytest_sort/config.py" line="93">
			<system-out>            raise ValueError(&quot;Do not use both --sort-record-times and --sort-no-record-times&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #302" file="src/pytest_sort/config.py" line="95">
			<system-out>        if config.getoption(&quot;sort_no_record&quot;):</system-out>
		</testcase>
		<testcase name="Mutant #303" file="src/pytest_sort/config.py" line="96">
			<system-out>            SortConfig.record = False</system-out>
		</testcase>
		<testcase name="Mutant #304" file="src/pytest_sort/config.py" line="96">
			<system-out>            SortConfig.record = False</system-out>
		</testcase>
		<testcase name="Mutant #305" file="src/pytest_sort/config.py" line="98">
			<system-out>            SortConfig.record = config.getoption(&quot;sort_record&quot;) or config.getini(&quot;sort_record_times&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #306" file="src/pytest_sort/config.py" line="98">
			<system-out>            SortConfig.record = config.getoption(&quot;sort_record&quot;) or config.getini(&quot;sort_record_times&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #307" file="src/pytest_sort/config.py" line="98">
			<system-out>            SortConfig.record = config.getoption(&quot;sort_record&quot;) or config.getini(&quot;sort_record_times&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #308" file="src/pytest_sort/config.py" line="98">
			<system-out>            SortConfig.record = config.getoption(&quot;sort_record&quot;) or config.getini(&quot;sort_record_times&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #309" file="src/pytest_sort/config.py" line="100">
			<system-out>        if not isinstance(SortConfig.record, bool):</system-out>
		</testcase>
		<testcase name="Mutant #310" file="src/pytest_sort/config.py" line="101">
			<system-out>            SortConfig.record = None</system-out>
		</testcase>
		<testcase name="Mutant #311" file="src/pytest_sort/config.py" line="102">
			<system-out>        if SortConfig.mode == &quot;fastest&quot; and SortConfig.record is None:</system-out>
		</testcase>
		<testcase name="Mutant #312" file="src/pytest_sort/config.py" line="102">
			<system-out>        if SortConfig.mode == &quot;fastest&quot; and SortConfig.record is None:</system-out>
		</testcase>
		<testcase name="Mutant #313" file="src/pytest_sort/config.py" line="102">
			<system-out>        if SortConfig.mode == &quot;fastest&quot; and SortConfig.record is None:</system-out>
		</testcase>
		<testcase name="Mutant #314" file="src/pytest_sort/config.py" line="102">
			<system-out>        if SortConfig.mode == &quot;fastest&quot; and SortConfig.record is None:</system-out>
		</testcase>
		<testcase name="Mutant #315" file="src/pytest_sort/config.py" line="103">
			<system-out>            SortConfig.record = True</system-out>
		</testcase>
		<testcase name="Mutant #316" file="src/pytest_sort/config.py" line="103">
			<system-out>            SortConfig.record = True</system-out>
		</testcase>
		<testcase name="Mutant #317" file="src/pytest_sort/config.py" line="105">
			<system-out>    @staticmethod</system-out>
		</testcase>
		<testcase name="Mutant #318" file="src/pytest_sort/config.py" line="107">
			<system-out>        SortConfig.seed = config.getoption(&quot;sort_seed&quot;) or config.getini(&quot;sort_seed&quot;) or SortConfig.seed</system-out>
		</testcase>
		<testcase name="Mutant #319" file="src/pytest_sort/config.py" line="107">
			<system-out>        SortConfig.seed = config.getoption(&quot;sort_seed&quot;) or config.getini(&quot;sort_seed&quot;) or SortConfig.seed</system-out>
		</testcase>
		<testcase name="Mutant #320" file="src/pytest_sort/config.py" line="107">
			<system-out>        SortConfig.seed = config.getoption(&quot;sort_seed&quot;) or config.getini(&quot;sort_seed&quot;) or SortConfig.seed</system-out>
		</testcase>
		<testcase name="Mutant #321" file="src/pytest_sort/config.py" line="107">
			<system-out>        SortConfig.seed = config.getoption(&quot;sort_seed&quot;) or config.getini(&quot;sort_seed&quot;) or SortConfig.seed</system-out>
		</testcase>
		<testcase name="Mutant #322" file="src/pytest_sort/config.py" line="108">
			<system-out>        if not str(SortConfig.seed).isdigit():</system-out>
		</testcase>
		<testcase name="Mutant #323" file="src/pytest_sort/config.py" line="109">
			<system-out>            msg = f&quot;Invalid seed value '{SortConfig.seed}' must be int&quot;</system-out>
		</testcase>
		<testcase name="Mutant #324" file="src/pytest_sort/config.py" line="109">
			<system-out>            msg = f&quot;Invalid seed value '{SortConfig.seed}' must be int&quot;</system-out>
		</testcase>
		<testcase name="Mutant #325" file="src/pytest_sort/config.py" line="111">
			<system-out>        SortConfig.seed = int(str(SortConfig.seed))</system-out>
		</testcase>
		<testcase name="Mutant #326" file="src/pytest_sort/config.py" line="113">
			<system-out>    @staticmethod</system-out>
		</testcase>
		<testcase name="Mutant #327" file="src/pytest_sort/config.py" line="115">
			<system-out>        database_file = config.getoption(&quot;sort_datafile&quot;) or config.getini(&quot;sort_datafile&quot;) or None</system-out>
		</testcase>
		<testcase name="Mutant #328" file="src/pytest_sort/config.py" line="115">
			<system-out>        database_file = config.getoption(&quot;sort_datafile&quot;) or config.getini(&quot;sort_datafile&quot;) or None</system-out>
		</testcase>
		<testcase name="Mutant #329" file="src/pytest_sort/config.py" line="115">
			<system-out>        database_file = config.getoption(&quot;sort_datafile&quot;) or config.getini(&quot;sort_datafile&quot;) or None</system-out>
		</testcase>
		<testcase name="Mutant #330" file="src/pytest_sort/config.py" line="115">
			<system-out>        database_file = config.getoption(&quot;sort_datafile&quot;) or config.getini(&quot;sort_datafile&quot;) or None</system-out>
		</testcase>
		<testcase name="Mutant #331" file="src/pytest_sort/config.py" line="117">
			<system-out>            database.database_file = Path(database_file)</system-out>
		</testcase>
		<testcase name="Mutant #332" file="src/pytest_sort/config.py" line="119">
			<system-out>    @staticmethod</system-out>
		</testcase>
		<testcase name="Mutant #333" file="src/pytest_sort/config.py" line="126">
			<system-out>            &quot;sort-mode&quot;: SortConfig.mode,</system-out>
		</testcase>
		<testcase name="Mutant #334" file="src/pytest_sort/config.py" line="127">
			<system-out>        }</system-out>
		</testcase>
		<testcase name="Mutant #335" file="src/pytest_sort/config.py" line="129">
			<system-out>        if SortConfig.mode not in (&quot;ordered&quot;, &quot;reverse&quot;) or SortConfig.bucket_mode != SortConfig.mode:</system-out>
		</testcase>
		<testcase name="Mutant #336" file="src/pytest_sort/config.py" line="129">
			<system-out>        if SortConfig.mode not in (&quot;ordered&quot;, &quot;reverse&quot;) or SortConfig.bucket_mode != SortConfig.mode:</system-out>
		</testcase>
		<testcase name="Mutant #337" file="src/pytest_sort/config.py" line="129">
			<system-out>        if SortConfig.mode not in (&quot;ordered&quot;, &quot;reverse&quot;) or SortConfig.bucket_mode != SortConfig.mode:</system-out>
		</testcase>
		<testcase name="Mutant #338" file="src/pytest_sort/config.py" line="129">
			<system-out>        if SortConfig.mode not in (&quot;ordered&quot;, &quot;reverse&quot;) or SortConfig.bucket_mode != SortConfig.mode:</system-out>
		</testcase>
		<testcase name="Mutant #339" file="src/pytest_sort/config.py" line="129">
			<system-out>        if SortConfig.mode not in (&quot;ordered&quot;, &quot;reverse&quot;) or SortConfig.bucket_mode != SortConfig.mode:</system-out>
		</testcase>
		<testcase name="Mutant #340" file="src/pytest_sort/config.py" line="130">
			<system-out>            config[&quot;sort-bucket&quot;] = SortConfig.bucket</system-out>
		</testcase>
		<testcase name="Mutant #341" file="src/pytest_sort/config.py" line="130">
			<system-out>            config[&quot;sort-bucket&quot;] = SortConfig.bucket</system-out>
		</testcase>
		<testcase name="Mutant #342" file="src/pytest_sort/config.py" line="132">
			<system-out>        if SortConfig.bucket_mode != SortConfig.mode:</system-out>
		</testcase>
		<testcase name="Mutant #343" file="src/pytest_sort/config.py" line="133">
			<system-out>            config[&quot;sort-bucket-mode&quot;] = SortConfig.bucket_mode</system-out>
		</testcase>
		<testcase name="Mutant #344" file="src/pytest_sort/config.py" line="133">
			<system-out>            config[&quot;sort-bucket-mode&quot;] = SortConfig.bucket_mode</system-out>
		</testcase>
		<testcase name="Mutant #345" file="src/pytest_sort/config.py" line="135">
			<system-out>        if SortConfig.mode == &quot;random&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #346" file="src/pytest_sort/config.py" line="135">
			<system-out>        if SortConfig.mode == &quot;random&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #347" file="src/pytest_sort/config.py" line="136">
			<system-out>            config[&quot;sort-seed&quot;] = SortConfig.seed</system-out>
		</testcase>
		<testcase name="Mutant #348" file="src/pytest_sort/config.py" line="136">
			<system-out>            config[&quot;sort-seed&quot;] = SortConfig.seed</system-out>
		</testcase>
		<testcase name="Mutant #349" file="src/pytest_sort/config.py" line="139">
			<system-out>            config[&quot;sort-reset-times&quot;] = True</system-out>
		</testcase>
		<testcase name="Mutant #350" file="src/pytest_sort/config.py" line="139">
			<system-out>            config[&quot;sort-reset-times&quot;] = True</system-out>
		</testcase>
		<testcase name="Mutant #351" file="src/pytest_sort/config.py" line="139">
			<system-out>            config[&quot;sort-reset-times&quot;] = True</system-out>
		</testcase>
		<testcase name="Mutant #352" file="src/pytest_sort/config.py" line="141">
			<system-out>        if SortConfig.record is not None:</system-out>
		</testcase>
		<testcase name="Mutant #353" file="src/pytest_sort/config.py" line="142">
			<system-out>            config[&quot;sort-record-times&quot;] = SortConfig.record</system-out>
		</testcase>
		<testcase name="Mutant #354" file="src/pytest_sort/config.py" line="142">
			<system-out>            config[&quot;sort-record-times&quot;] = SortConfig.record</system-out>
		</testcase>
		<testcase name="Mutant #355" file="src/pytest_sort/config.py" line="145">
			<system-out>            config[&quot;sort-report-times&quot;] = True</system-out>
		</testcase>
		<testcase name="Mutant #356" file="src/pytest_sort/config.py" line="145">
			<system-out>            config[&quot;sort-report-times&quot;] = True</system-out>
		</testcase>
		<testcase name="Mutant #357" file="src/pytest_sort/config.py" line="145">
			<system-out>            config[&quot;sort-report-times&quot;] = True</system-out>
		</testcase>
		<testcase name="Mutant #358" file="src/pytest_sort/config.py" line="148">
			<system-out>            config[&quot;sort-debug&quot;] = True</system-out>
		</testcase>
		<testcase name="Mutant #359" file="src/pytest_sort/config.py" line="148">
			<system-out>            config[&quot;sort-debug&quot;] = True</system-out>
		</testcase>
		<testcase name="Mutant #360" file="src/pytest_sort/config.py" line="148">
			<system-out>            config[&quot;sort-debug&quot;] = True</system-out>
		</testcase>
		<testcase name="Mutant #361" file="src/pytest_sort/plugin.py" line="20">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -17,7 +17,7 @@
 
 def pytest_addoption(parser: pytest.Parser) -&gt; None:
     &quot;&quot;&quot;pytest_sort: Add command line and ini options to pytest.&quot;&quot;&quot;
-    group = parser.getgroup(&quot;pytest-sort&quot;)
+    group = parser.getgroup(&quot;XXpytest-sortXX&quot;)
 
     help_text = &quot;&quot;&quot;Method for sorting test items.
     ordered = (default) pytest_sort will keep the default order.
</failure>
			<system-out>    group = parser.getgroup(&quot;pytest-sort&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #362" file="src/pytest_sort/plugin.py" line="20">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -17,7 +17,7 @@
 
 def pytest_addoption(parser: pytest.Parser) -&gt; None:
     &quot;&quot;&quot;pytest_sort: Add command line and ini options to pytest.&quot;&quot;&quot;
-    group = parser.getgroup(&quot;pytest-sort&quot;)
+    group = None
 
     help_text = &quot;&quot;&quot;Method for sorting test items.
     ordered = (default) pytest_sort will keep the default order.
</failure>
			<system-out>    group = parser.getgroup(&quot;pytest-sort&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #363" file="src/pytest_sort/plugin.py" line="22">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -19,13 +19,7 @@
     &quot;&quot;&quot;pytest_sort: Add command line and ini options to pytest.&quot;&quot;&quot;
     group = parser.getgroup(&quot;pytest-sort&quot;)
 
-    help_text = &quot;&quot;&quot;Method for sorting test items.
-    ordered = (default) pytest_sort will keep the default order.
-    reverse = pytest_sort will reverse the default order.
-    md5     = Sort by md5 of test name.
-    random  = randomly sort tests.
-    fastest = use recorded times to run fastest tests first.
-    &quot;&quot;&quot;
+    help_text = None
     choices = modes
     group.addoption(&quot;--sort-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_mode&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_mode&quot;, help=str(choices))
</failure>
			<system-out>    help_text = &quot;&quot;&quot;Method for sorting test items.</system-out>
		</testcase>
		<testcase name="Mutant #364" file="src/pytest_sort/plugin.py" line="29">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -26,7 +26,7 @@
     random  = randomly sort tests.
     fastest = use recorded times to run fastest tests first.
     &quot;&quot;&quot;
-    choices = modes
+    choices = None
     group.addoption(&quot;--sort-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_mode&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_mode&quot;, help=str(choices))
 
</failure>
			<system-out>    choices = modes</system-out>
		</testcase>
		<testcase name="Mutant #365" file="src/pytest_sort/plugin.py" line="30">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -27,7 +27,7 @@
     fastest = use recorded times to run fastest tests first.
     &quot;&quot;&quot;
     choices = modes
-    group.addoption(&quot;--sort-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_mode&quot;, choices=choices, help=help_text)
+    group.addoption(&quot;XX--sort-modeXX&quot;, action=&quot;store&quot;, dest=&quot;sort_mode&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_mode&quot;, help=str(choices))
 
     help_text = &quot;Sort test items within specified test buckets. (default: parent)&quot;
</failure>
			<system-out>    group.addoption(&quot;--sort-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_mode&quot;, choices=choices, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #366" file="src/pytest_sort/plugin.py" line="30">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -27,7 +27,7 @@
     fastest = use recorded times to run fastest tests first.
     &quot;&quot;&quot;
     choices = modes
-    group.addoption(&quot;--sort-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_mode&quot;, choices=choices, help=help_text)
+    group.addoption(&quot;--sort-mode&quot;, action=&quot;XXstoreXX&quot;, dest=&quot;sort_mode&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_mode&quot;, help=str(choices))
 
     help_text = &quot;Sort test items within specified test buckets. (default: parent)&quot;
</failure>
			<system-out>    group.addoption(&quot;--sort-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_mode&quot;, choices=choices, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #367" file="src/pytest_sort/plugin.py" line="30">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -27,7 +27,7 @@
     fastest = use recorded times to run fastest tests first.
     &quot;&quot;&quot;
     choices = modes
-    group.addoption(&quot;--sort-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_mode&quot;, choices=choices, help=help_text)
+    group.addoption(&quot;--sort-mode&quot;, action=&quot;store&quot;, dest=&quot;XXsort_modeXX&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_mode&quot;, help=str(choices))
 
     help_text = &quot;Sort test items within specified test buckets. (default: parent)&quot;
</failure>
			<system-out>    group.addoption(&quot;--sort-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_mode&quot;, choices=choices, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #368" file="src/pytest_sort/plugin.py" line="31">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -28,7 +28,7 @@
     &quot;&quot;&quot;
     choices = modes
     group.addoption(&quot;--sort-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_mode&quot;, choices=choices, help=help_text)
-    parser.addini(&quot;sort_mode&quot;, help=str(choices))
+    parser.addini(&quot;XXsort_modeXX&quot;, help=str(choices))
 
     help_text = &quot;Sort test items within specified test buckets. (default: parent)&quot;
     choices = bucket_types
</failure>
			<system-out>    parser.addini(&quot;sort_mode&quot;, help=str(choices))</system-out>
		</testcase>
		<testcase name="Mutant #369" file="src/pytest_sort/plugin.py" line="33">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -30,7 +30,7 @@
     group.addoption(&quot;--sort-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_mode&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_mode&quot;, help=str(choices))
 
-    help_text = &quot;Sort test items within specified test buckets. (default: parent)&quot;
+    help_text = &quot;XXSort test items within specified test buckets. (default: parent)XX&quot;
     choices = bucket_types
     group.addoption(&quot;--sort-bucket&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_bucket&quot;, help=str(choices))
</failure>
			<system-out>    help_text = &quot;Sort test items within specified test buckets. (default: parent)&quot;</system-out>
		</testcase>
		<testcase name="Mutant #370" file="src/pytest_sort/plugin.py" line="33">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -30,7 +30,7 @@
     group.addoption(&quot;--sort-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_mode&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_mode&quot;, help=str(choices))
 
-    help_text = &quot;Sort test items within specified test buckets. (default: parent)&quot;
+    help_text = None
     choices = bucket_types
     group.addoption(&quot;--sort-bucket&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_bucket&quot;, help=str(choices))
</failure>
			<system-out>    help_text = &quot;Sort test items within specified test buckets. (default: parent)&quot;</system-out>
		</testcase>
		<testcase name="Mutant #371" file="src/pytest_sort/plugin.py" line="34">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -31,7 +31,7 @@
     parser.addini(&quot;sort_mode&quot;, help=str(choices))
 
     help_text = &quot;Sort test items within specified test buckets. (default: parent)&quot;
-    choices = bucket_types
+    choices = None
     group.addoption(&quot;--sort-bucket&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_bucket&quot;, help=str(choices))
 
</failure>
			<system-out>    choices = bucket_types</system-out>
		</testcase>
		<testcase name="Mutant #372" file="src/pytest_sort/plugin.py" line="35">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -32,7 +32,7 @@
 
     help_text = &quot;Sort test items within specified test buckets. (default: parent)&quot;
     choices = bucket_types
-    group.addoption(&quot;--sort-bucket&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket&quot;, choices=choices, help=help_text)
+    group.addoption(&quot;XX--sort-bucketXX&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_bucket&quot;, help=str(choices))
 
     help_text = &quot;&quot;&quot;Method for sorting the buckets.
</failure>
			<system-out>    group.addoption(&quot;--sort-bucket&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket&quot;, choices=choices, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #373" file="src/pytest_sort/plugin.py" line="35">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -32,7 +32,7 @@
 
     help_text = &quot;Sort test items within specified test buckets. (default: parent)&quot;
     choices = bucket_types
-    group.addoption(&quot;--sort-bucket&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket&quot;, choices=choices, help=help_text)
+    group.addoption(&quot;--sort-bucket&quot;, action=&quot;XXstoreXX&quot;, dest=&quot;sort_bucket&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_bucket&quot;, help=str(choices))
 
     help_text = &quot;&quot;&quot;Method for sorting the buckets.
</failure>
			<system-out>    group.addoption(&quot;--sort-bucket&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket&quot;, choices=choices, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #374" file="src/pytest_sort/plugin.py" line="35">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -32,7 +32,7 @@
 
     help_text = &quot;Sort test items within specified test buckets. (default: parent)&quot;
     choices = bucket_types
-    group.addoption(&quot;--sort-bucket&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket&quot;, choices=choices, help=help_text)
+    group.addoption(&quot;--sort-bucket&quot;, action=&quot;store&quot;, dest=&quot;XXsort_bucketXX&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_bucket&quot;, help=str(choices))
 
     help_text = &quot;&quot;&quot;Method for sorting the buckets.
</failure>
			<system-out>    group.addoption(&quot;--sort-bucket&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket&quot;, choices=choices, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #375" file="src/pytest_sort/plugin.py" line="36">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -33,7 +33,7 @@
     help_text = &quot;Sort test items within specified test buckets. (default: parent)&quot;
     choices = bucket_types
     group.addoption(&quot;--sort-bucket&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket&quot;, choices=choices, help=help_text)
-    parser.addini(&quot;sort_bucket&quot;, help=str(choices))
+    parser.addini(&quot;XXsort_bucketXX&quot;, help=str(choices))
 
     help_text = &quot;&quot;&quot;Method for sorting the buckets.
     sort_mode = (default) Use same setting for soring buckets as for sorting items.
</failure>
			<system-out>    parser.addini(&quot;sort_bucket&quot;, help=str(choices))</system-out>
		</testcase>
		<testcase name="Mutant #376" file="src/pytest_sort/plugin.py" line="38">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -35,10 +35,7 @@
     group.addoption(&quot;--sort-bucket&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_bucket&quot;, help=str(choices))
 
-    help_text = &quot;&quot;&quot;Method for sorting the buckets.
-    sort_mode = (default) Use same setting for soring buckets as for sorting items.
-    See sort_mode for desriptions of other options.
-    &quot;&quot;&quot;
+    help_text = None
     choices = [&quot;sort_mode&quot;]
     choices.extend(modes)
     group.addoption(&quot;--sort-bucket-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket_mode&quot;, choices=choices, help=help_text)
</failure>
			<system-out>    help_text = &quot;&quot;&quot;Method for sorting the buckets.</system-out>
		</testcase>
		<testcase name="Mutant #377" file="src/pytest_sort/plugin.py" line="42">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -39,7 +39,7 @@
     sort_mode = (default) Use same setting for soring buckets as for sorting items.
     See sort_mode for desriptions of other options.
     &quot;&quot;&quot;
-    choices = [&quot;sort_mode&quot;]
+    choices = [&quot;XXsort_modeXX&quot;]
     choices.extend(modes)
     group.addoption(&quot;--sort-bucket-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket_mode&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_bucket_mode&quot;, help=str(choices))
</failure>
			<system-out>    choices = [&quot;sort_mode&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #378" file="src/pytest_sort/plugin.py" line="42">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -39,7 +39,7 @@
     sort_mode = (default) Use same setting for soring buckets as for sorting items.
     See sort_mode for desriptions of other options.
     &quot;&quot;&quot;
-    choices = [&quot;sort_mode&quot;]
+    choices = None
     choices.extend(modes)
     group.addoption(&quot;--sort-bucket-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket_mode&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_bucket_mode&quot;, help=str(choices))
</failure>
			<system-out>    choices = [&quot;sort_mode&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #379" file="src/pytest_sort/plugin.py" line="44">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -41,7 +41,7 @@
     &quot;&quot;&quot;
     choices = [&quot;sort_mode&quot;]
     choices.extend(modes)
-    group.addoption(&quot;--sort-bucket-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket_mode&quot;, choices=choices, help=help_text)
+    group.addoption(&quot;XX--sort-bucket-modeXX&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket_mode&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_bucket_mode&quot;, help=str(choices))
 
     help_text = &quot;Random Seed to use with random mode.&quot;
</failure>
			<system-out>    group.addoption(&quot;--sort-bucket-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket_mode&quot;, choices=choices, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #380" file="src/pytest_sort/plugin.py" line="44">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -41,7 +41,7 @@
     &quot;&quot;&quot;
     choices = [&quot;sort_mode&quot;]
     choices.extend(modes)
-    group.addoption(&quot;--sort-bucket-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket_mode&quot;, choices=choices, help=help_text)
+    group.addoption(&quot;--sort-bucket-mode&quot;, action=&quot;XXstoreXX&quot;, dest=&quot;sort_bucket_mode&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_bucket_mode&quot;, help=str(choices))
 
     help_text = &quot;Random Seed to use with random mode.&quot;
</failure>
			<system-out>    group.addoption(&quot;--sort-bucket-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket_mode&quot;, choices=choices, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #381" file="src/pytest_sort/plugin.py" line="44">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -41,7 +41,7 @@
     &quot;&quot;&quot;
     choices = [&quot;sort_mode&quot;]
     choices.extend(modes)
-    group.addoption(&quot;--sort-bucket-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket_mode&quot;, choices=choices, help=help_text)
+    group.addoption(&quot;--sort-bucket-mode&quot;, action=&quot;store&quot;, dest=&quot;XXsort_bucket_modeXX&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_bucket_mode&quot;, help=str(choices))
 
     help_text = &quot;Random Seed to use with random mode.&quot;
</failure>
			<system-out>    group.addoption(&quot;--sort-bucket-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket_mode&quot;, choices=choices, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #382" file="src/pytest_sort/plugin.py" line="45">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -42,7 +42,7 @@
     choices = [&quot;sort_mode&quot;]
     choices.extend(modes)
     group.addoption(&quot;--sort-bucket-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket_mode&quot;, choices=choices, help=help_text)
-    parser.addini(&quot;sort_bucket_mode&quot;, help=str(choices))
+    parser.addini(&quot;XXsort_bucket_modeXX&quot;, help=str(choices))
 
     help_text = &quot;Random Seed to use with random mode.&quot;
     group.addoption(&quot;--sort-seed&quot;, action=&quot;store&quot;, dest=&quot;sort_seed&quot;, help=help_text)
</failure>
			<system-out>    parser.addini(&quot;sort_bucket_mode&quot;, help=str(choices))</system-out>
		</testcase>
		<testcase name="Mutant #383" file="src/pytest_sort/plugin.py" line="47">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -44,7 +44,7 @@
     group.addoption(&quot;--sort-bucket-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket_mode&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_bucket_mode&quot;, help=str(choices))
 
-    help_text = &quot;Random Seed to use with random mode.&quot;
+    help_text = &quot;XXRandom Seed to use with random mode.XX&quot;
     group.addoption(&quot;--sort-seed&quot;, action=&quot;store&quot;, dest=&quot;sort_seed&quot;, help=help_text)
     parser.addini(&quot;sort_seed&quot;, help=help_text)
 
</failure>
			<system-out>    help_text = &quot;Random Seed to use with random mode.&quot;</system-out>
		</testcase>
		<testcase name="Mutant #384" file="src/pytest_sort/plugin.py" line="47">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -44,7 +44,7 @@
     group.addoption(&quot;--sort-bucket-mode&quot;, action=&quot;store&quot;, dest=&quot;sort_bucket_mode&quot;, choices=choices, help=help_text)
     parser.addini(&quot;sort_bucket_mode&quot;, help=str(choices))
 
-    help_text = &quot;Random Seed to use with random mode.&quot;
+    help_text = None
     group.addoption(&quot;--sort-seed&quot;, action=&quot;store&quot;, dest=&quot;sort_seed&quot;, help=help_text)
     parser.addini(&quot;sort_seed&quot;, help=help_text)
 
</failure>
			<system-out>    help_text = &quot;Random Seed to use with random mode.&quot;</system-out>
		</testcase>
		<testcase name="Mutant #385" file="src/pytest_sort/plugin.py" line="48">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -45,7 +45,7 @@
     parser.addini(&quot;sort_bucket_mode&quot;, help=str(choices))
 
     help_text = &quot;Random Seed to use with random mode.&quot;
-    group.addoption(&quot;--sort-seed&quot;, action=&quot;store&quot;, dest=&quot;sort_seed&quot;, help=help_text)
+    group.addoption(&quot;XX--sort-seedXX&quot;, action=&quot;store&quot;, dest=&quot;sort_seed&quot;, help=help_text)
     parser.addini(&quot;sort_seed&quot;, help=help_text)
 
     help_text = &quot;Records runtimes. Activated by default when sort-mode=fastest&quot;
</failure>
			<system-out>    group.addoption(&quot;--sort-seed&quot;, action=&quot;store&quot;, dest=&quot;sort_seed&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #386" file="src/pytest_sort/plugin.py" line="48">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -45,7 +45,7 @@
     parser.addini(&quot;sort_bucket_mode&quot;, help=str(choices))
 
     help_text = &quot;Random Seed to use with random mode.&quot;
-    group.addoption(&quot;--sort-seed&quot;, action=&quot;store&quot;, dest=&quot;sort_seed&quot;, help=help_text)
+    group.addoption(&quot;--sort-seed&quot;, action=&quot;XXstoreXX&quot;, dest=&quot;sort_seed&quot;, help=help_text)
     parser.addini(&quot;sort_seed&quot;, help=help_text)
 
     help_text = &quot;Records runtimes. Activated by default when sort-mode=fastest&quot;
</failure>
			<system-out>    group.addoption(&quot;--sort-seed&quot;, action=&quot;store&quot;, dest=&quot;sort_seed&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #387" file="src/pytest_sort/plugin.py" line="48">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -45,7 +45,7 @@
     parser.addini(&quot;sort_bucket_mode&quot;, help=str(choices))
 
     help_text = &quot;Random Seed to use with random mode.&quot;
-    group.addoption(&quot;--sort-seed&quot;, action=&quot;store&quot;, dest=&quot;sort_seed&quot;, help=help_text)
+    group.addoption(&quot;--sort-seed&quot;, action=&quot;store&quot;, dest=&quot;XXsort_seedXX&quot;, help=help_text)
     parser.addini(&quot;sort_seed&quot;, help=help_text)
 
     help_text = &quot;Records runtimes. Activated by default when sort-mode=fastest&quot;
</failure>
			<system-out>    group.addoption(&quot;--sort-seed&quot;, action=&quot;store&quot;, dest=&quot;sort_seed&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #388" file="src/pytest_sort/plugin.py" line="49">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -46,7 +46,7 @@
 
     help_text = &quot;Random Seed to use with random mode.&quot;
     group.addoption(&quot;--sort-seed&quot;, action=&quot;store&quot;, dest=&quot;sort_seed&quot;, help=help_text)
-    parser.addini(&quot;sort_seed&quot;, help=help_text)
+    parser.addini(&quot;XXsort_seedXX&quot;, help=help_text)
 
     help_text = &quot;Records runtimes. Activated by default when sort-mode=fastest&quot;
     group.addoption(&quot;--sort-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_record&quot;, help=help_text)
</failure>
			<system-out>    parser.addini(&quot;sort_seed&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #389" file="src/pytest_sort/plugin.py" line="51">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -48,7 +48,7 @@
     group.addoption(&quot;--sort-seed&quot;, action=&quot;store&quot;, dest=&quot;sort_seed&quot;, help=help_text)
     parser.addini(&quot;sort_seed&quot;, help=help_text)
 
-    help_text = &quot;Records runtimes. Activated by default when sort-mode=fastest&quot;
+    help_text = &quot;XXRecords runtimes. Activated by default when sort-mode=fastestXX&quot;
     group.addoption(&quot;--sort-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_record&quot;, help=help_text)
     group.addoption(&quot;--sort-no-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_no_record&quot;, help=help_text)
     parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;bool&quot;)
</failure>
			<system-out>    help_text = &quot;Records runtimes. Activated by default when sort-mode=fastest&quot;</system-out>
		</testcase>
		<testcase name="Mutant #390" file="src/pytest_sort/plugin.py" line="51">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -48,7 +48,7 @@
     group.addoption(&quot;--sort-seed&quot;, action=&quot;store&quot;, dest=&quot;sort_seed&quot;, help=help_text)
     parser.addini(&quot;sort_seed&quot;, help=help_text)
 
-    help_text = &quot;Records runtimes. Activated by default when sort-mode=fastest&quot;
+    help_text = None
     group.addoption(&quot;--sort-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_record&quot;, help=help_text)
     group.addoption(&quot;--sort-no-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_no_record&quot;, help=help_text)
     parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;bool&quot;)
</failure>
			<system-out>    help_text = &quot;Records runtimes. Activated by default when sort-mode=fastest&quot;</system-out>
		</testcase>
		<testcase name="Mutant #391" file="src/pytest_sort/plugin.py" line="52">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -49,7 +49,7 @@
     parser.addini(&quot;sort_seed&quot;, help=help_text)
 
     help_text = &quot;Records runtimes. Activated by default when sort-mode=fastest&quot;
-    group.addoption(&quot;--sort-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_record&quot;, help=help_text)
+    group.addoption(&quot;XX--sort-record-timesXX&quot;, action=&quot;store_true&quot;, dest=&quot;sort_record&quot;, help=help_text)
     group.addoption(&quot;--sort-no-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_no_record&quot;, help=help_text)
     parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;bool&quot;)
 
</failure>
			<system-out>    group.addoption(&quot;--sort-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_record&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #392" file="src/pytest_sort/plugin.py" line="52">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -49,7 +49,7 @@
     parser.addini(&quot;sort_seed&quot;, help=help_text)
 
     help_text = &quot;Records runtimes. Activated by default when sort-mode=fastest&quot;
-    group.addoption(&quot;--sort-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_record&quot;, help=help_text)
+    group.addoption(&quot;--sort-record-times&quot;, action=&quot;XXstore_trueXX&quot;, dest=&quot;sort_record&quot;, help=help_text)
     group.addoption(&quot;--sort-no-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_no_record&quot;, help=help_text)
     parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;bool&quot;)
 
</failure>
			<system-out>    group.addoption(&quot;--sort-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_record&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #393" file="src/pytest_sort/plugin.py" line="52">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -49,7 +49,7 @@
     parser.addini(&quot;sort_seed&quot;, help=help_text)
 
     help_text = &quot;Records runtimes. Activated by default when sort-mode=fastest&quot;
-    group.addoption(&quot;--sort-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_record&quot;, help=help_text)
+    group.addoption(&quot;--sort-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;XXsort_recordXX&quot;, help=help_text)
     group.addoption(&quot;--sort-no-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_no_record&quot;, help=help_text)
     parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;bool&quot;)
 
</failure>
			<system-out>    group.addoption(&quot;--sort-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_record&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #394" file="src/pytest_sort/plugin.py" line="53">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -50,7 +50,7 @@
 
     help_text = &quot;Records runtimes. Activated by default when sort-mode=fastest&quot;
     group.addoption(&quot;--sort-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_record&quot;, help=help_text)
-    group.addoption(&quot;--sort-no-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_no_record&quot;, help=help_text)
+    group.addoption(&quot;XX--sort-no-record-timesXX&quot;, action=&quot;store_true&quot;, dest=&quot;sort_no_record&quot;, help=help_text)
     parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;bool&quot;)
 
     help_text = &quot;Clear the recorded runtimes before sorting.&quot;
</failure>
			<system-out>    group.addoption(&quot;--sort-no-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_no_record&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #395" file="src/pytest_sort/plugin.py" line="53">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -50,7 +50,7 @@
 
     help_text = &quot;Records runtimes. Activated by default when sort-mode=fastest&quot;
     group.addoption(&quot;--sort-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_record&quot;, help=help_text)
-    group.addoption(&quot;--sort-no-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_no_record&quot;, help=help_text)
+    group.addoption(&quot;--sort-no-record-times&quot;, action=&quot;XXstore_trueXX&quot;, dest=&quot;sort_no_record&quot;, help=help_text)
     parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;bool&quot;)
 
     help_text = &quot;Clear the recorded runtimes before sorting.&quot;
</failure>
			<system-out>    group.addoption(&quot;--sort-no-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_no_record&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #396" file="src/pytest_sort/plugin.py" line="53">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -50,7 +50,7 @@
 
     help_text = &quot;Records runtimes. Activated by default when sort-mode=fastest&quot;
     group.addoption(&quot;--sort-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_record&quot;, help=help_text)
-    group.addoption(&quot;--sort-no-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_no_record&quot;, help=help_text)
+    group.addoption(&quot;--sort-no-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;XXsort_no_recordXX&quot;, help=help_text)
     parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;bool&quot;)
 
     help_text = &quot;Clear the recorded runtimes before sorting.&quot;
</failure>
			<system-out>    group.addoption(&quot;--sort-no-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_no_record&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #397" file="src/pytest_sort/plugin.py" line="54">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -51,7 +51,7 @@
     help_text = &quot;Records runtimes. Activated by default when sort-mode=fastest&quot;
     group.addoption(&quot;--sort-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_record&quot;, help=help_text)
     group.addoption(&quot;--sort-no-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_no_record&quot;, help=help_text)
-    parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;bool&quot;)
+    parser.addini(&quot;XXsort_record_timesXX&quot;, help=help_text, type=&quot;bool&quot;)
 
     help_text = &quot;Clear the recorded runtimes before sorting.&quot;
     group.addoption(&quot;--sort-reset-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_reset_times&quot;, help=help_text)
</failure>
			<system-out>    parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;bool&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #398" file="src/pytest_sort/plugin.py" line="54">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -51,7 +51,7 @@
     help_text = &quot;Records runtimes. Activated by default when sort-mode=fastest&quot;
     group.addoption(&quot;--sort-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_record&quot;, help=help_text)
     group.addoption(&quot;--sort-no-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_no_record&quot;, help=help_text)
-    parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;bool&quot;)
+    parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;XXboolXX&quot;)
 
     help_text = &quot;Clear the recorded runtimes before sorting.&quot;
     group.addoption(&quot;--sort-reset-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_reset_times&quot;, help=help_text)
</failure>
			<system-out>    parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;bool&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #399" file="src/pytest_sort/plugin.py" line="56">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -53,7 +53,7 @@
     group.addoption(&quot;--sort-no-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_no_record&quot;, help=help_text)
     parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;bool&quot;)
 
-    help_text = &quot;Clear the recorded runtimes before sorting.&quot;
+    help_text = &quot;XXClear the recorded runtimes before sorting.XX&quot;
     group.addoption(&quot;--sort-reset-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_reset_times&quot;, help=help_text)
 
     help_text = &quot;At end of report current times.&quot;
</failure>
			<system-out>    help_text = &quot;Clear the recorded runtimes before sorting.&quot;</system-out>
		</testcase>
		<testcase name="Mutant #400" file="src/pytest_sort/plugin.py" line="56">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -53,7 +53,7 @@
     group.addoption(&quot;--sort-no-record-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_no_record&quot;, help=help_text)
     parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;bool&quot;)
 
-    help_text = &quot;Clear the recorded runtimes before sorting.&quot;
+    help_text = None
     group.addoption(&quot;--sort-reset-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_reset_times&quot;, help=help_text)
 
     help_text = &quot;At end of report current times.&quot;
</failure>
			<system-out>    help_text = &quot;Clear the recorded runtimes before sorting.&quot;</system-out>
		</testcase>
		<testcase name="Mutant #401" file="src/pytest_sort/plugin.py" line="57">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -54,7 +54,7 @@
     parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;bool&quot;)
 
     help_text = &quot;Clear the recorded runtimes before sorting.&quot;
-    group.addoption(&quot;--sort-reset-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_reset_times&quot;, help=help_text)
+    group.addoption(&quot;XX--sort-reset-timesXX&quot;, action=&quot;store_true&quot;, dest=&quot;sort_reset_times&quot;, help=help_text)
 
     help_text = &quot;At end of report current times.&quot;
     group.addoption(&quot;--sort-report-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_report_times&quot;, help=help_text)
</failure>
			<system-out>    group.addoption(&quot;--sort-reset-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_reset_times&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #402" file="src/pytest_sort/plugin.py" line="57">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -54,7 +54,7 @@
     parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;bool&quot;)
 
     help_text = &quot;Clear the recorded runtimes before sorting.&quot;
-    group.addoption(&quot;--sort-reset-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_reset_times&quot;, help=help_text)
+    group.addoption(&quot;--sort-reset-times&quot;, action=&quot;XXstore_trueXX&quot;, dest=&quot;sort_reset_times&quot;, help=help_text)
 
     help_text = &quot;At end of report current times.&quot;
     group.addoption(&quot;--sort-report-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_report_times&quot;, help=help_text)
</failure>
			<system-out>    group.addoption(&quot;--sort-reset-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_reset_times&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #403" file="src/pytest_sort/plugin.py" line="57">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -54,7 +54,7 @@
     parser.addini(&quot;sort_record_times&quot;, help=help_text, type=&quot;bool&quot;)
 
     help_text = &quot;Clear the recorded runtimes before sorting.&quot;
-    group.addoption(&quot;--sort-reset-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_reset_times&quot;, help=help_text)
+    group.addoption(&quot;--sort-reset-times&quot;, action=&quot;store_true&quot;, dest=&quot;XXsort_reset_timesXX&quot;, help=help_text)
 
     help_text = &quot;At end of report current times.&quot;
     group.addoption(&quot;--sort-report-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_report_times&quot;, help=help_text)
</failure>
			<system-out>    group.addoption(&quot;--sort-reset-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_reset_times&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #404" file="src/pytest_sort/plugin.py" line="59">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -56,7 +56,7 @@
     help_text = &quot;Clear the recorded runtimes before sorting.&quot;
     group.addoption(&quot;--sort-reset-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_reset_times&quot;, help=help_text)
 
-    help_text = &quot;At end of report current times.&quot;
+    help_text = &quot;XXAt end of report current times.XX&quot;
     group.addoption(&quot;--sort-report-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_report_times&quot;, help=help_text)
 
     help_text = &quot;Location to store pytest-sort data. (default: ./.pytest_sort)&quot;
</failure>
			<system-out>    help_text = &quot;At end of report current times.&quot;</system-out>
		</testcase>
		<testcase name="Mutant #405" file="src/pytest_sort/plugin.py" line="59">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -56,7 +56,7 @@
     help_text = &quot;Clear the recorded runtimes before sorting.&quot;
     group.addoption(&quot;--sort-reset-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_reset_times&quot;, help=help_text)
 
-    help_text = &quot;At end of report current times.&quot;
+    help_text = None
     group.addoption(&quot;--sort-report-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_report_times&quot;, help=help_text)
 
     help_text = &quot;Location to store pytest-sort data. (default: ./.pytest_sort)&quot;
</failure>
			<system-out>    help_text = &quot;At end of report current times.&quot;</system-out>
		</testcase>
		<testcase name="Mutant #406" file="src/pytest_sort/plugin.py" line="60">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -57,7 +57,7 @@
     group.addoption(&quot;--sort-reset-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_reset_times&quot;, help=help_text)
 
     help_text = &quot;At end of report current times.&quot;
-    group.addoption(&quot;--sort-report-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_report_times&quot;, help=help_text)
+    group.addoption(&quot;XX--sort-report-timesXX&quot;, action=&quot;store_true&quot;, dest=&quot;sort_report_times&quot;, help=help_text)
 
     help_text = &quot;Location to store pytest-sort data. (default: ./.pytest_sort)&quot;
     group.addoption(&quot;--sort-datafile&quot;, action=&quot;store&quot;, dest=&quot;sort_datafile&quot;, help=help_text)
</failure>
			<system-out>    group.addoption(&quot;--sort-report-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_report_times&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #407" file="src/pytest_sort/plugin.py" line="60">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -57,7 +57,7 @@
     group.addoption(&quot;--sort-reset-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_reset_times&quot;, help=help_text)
 
     help_text = &quot;At end of report current times.&quot;
-    group.addoption(&quot;--sort-report-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_report_times&quot;, help=help_text)
+    group.addoption(&quot;--sort-report-times&quot;, action=&quot;XXstore_trueXX&quot;, dest=&quot;sort_report_times&quot;, help=help_text)
 
     help_text = &quot;Location to store pytest-sort data. (default: ./.pytest_sort)&quot;
     group.addoption(&quot;--sort-datafile&quot;, action=&quot;store&quot;, dest=&quot;sort_datafile&quot;, help=help_text)
</failure>
			<system-out>    group.addoption(&quot;--sort-report-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_report_times&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #408" file="src/pytest_sort/plugin.py" line="60">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -57,7 +57,7 @@
     group.addoption(&quot;--sort-reset-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_reset_times&quot;, help=help_text)
 
     help_text = &quot;At end of report current times.&quot;
-    group.addoption(&quot;--sort-report-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_report_times&quot;, help=help_text)
+    group.addoption(&quot;--sort-report-times&quot;, action=&quot;store_true&quot;, dest=&quot;XXsort_report_timesXX&quot;, help=help_text)
 
     help_text = &quot;Location to store pytest-sort data. (default: ./.pytest_sort)&quot;
     group.addoption(&quot;--sort-datafile&quot;, action=&quot;store&quot;, dest=&quot;sort_datafile&quot;, help=help_text)
</failure>
			<system-out>    group.addoption(&quot;--sort-report-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_report_times&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #409" file="src/pytest_sort/plugin.py" line="62">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -59,7 +59,7 @@
     help_text = &quot;At end of report current times.&quot;
     group.addoption(&quot;--sort-report-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_report_times&quot;, help=help_text)
 
-    help_text = &quot;Location to store pytest-sort data. (default: ./.pytest_sort)&quot;
+    help_text = &quot;XXLocation to store pytest-sort data. (default: ./.pytest_sort)XX&quot;
     group.addoption(&quot;--sort-datafile&quot;, action=&quot;store&quot;, dest=&quot;sort_datafile&quot;, help=help_text)
     parser.addini(&quot;sort_datafile&quot;, help=help_text)
 
</failure>
			<system-out>    help_text = &quot;Location to store pytest-sort data. (default: ./.pytest_sort)&quot;</system-out>
		</testcase>
		<testcase name="Mutant #410" file="src/pytest_sort/plugin.py" line="62">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -59,7 +59,7 @@
     help_text = &quot;At end of report current times.&quot;
     group.addoption(&quot;--sort-report-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_report_times&quot;, help=help_text)
 
-    help_text = &quot;Location to store pytest-sort data. (default: ./.pytest_sort)&quot;
+    help_text = None
     group.addoption(&quot;--sort-datafile&quot;, action=&quot;store&quot;, dest=&quot;sort_datafile&quot;, help=help_text)
     parser.addini(&quot;sort_datafile&quot;, help=help_text)
 
</failure>
			<system-out>    help_text = &quot;Location to store pytest-sort data. (default: ./.pytest_sort)&quot;</system-out>
		</testcase>
		<testcase name="Mutant #411" file="src/pytest_sort/plugin.py" line="63">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -60,7 +60,7 @@
     group.addoption(&quot;--sort-report-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_report_times&quot;, help=help_text)
 
     help_text = &quot;Location to store pytest-sort data. (default: ./.pytest_sort)&quot;
-    group.addoption(&quot;--sort-datafile&quot;, action=&quot;store&quot;, dest=&quot;sort_datafile&quot;, help=help_text)
+    group.addoption(&quot;XX--sort-datafileXX&quot;, action=&quot;store&quot;, dest=&quot;sort_datafile&quot;, help=help_text)
     parser.addini(&quot;sort_datafile&quot;, help=help_text)
 
     group.addoption(&quot;--sort-debug&quot;, action=&quot;store_true&quot;, dest=&quot;sort_debug&quot;, help=argparse.SUPPRESS)
</failure>
			<system-out>    group.addoption(&quot;--sort-datafile&quot;, action=&quot;store&quot;, dest=&quot;sort_datafile&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #412" file="src/pytest_sort/plugin.py" line="63">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -60,7 +60,7 @@
     group.addoption(&quot;--sort-report-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_report_times&quot;, help=help_text)
 
     help_text = &quot;Location to store pytest-sort data. (default: ./.pytest_sort)&quot;
-    group.addoption(&quot;--sort-datafile&quot;, action=&quot;store&quot;, dest=&quot;sort_datafile&quot;, help=help_text)
+    group.addoption(&quot;--sort-datafile&quot;, action=&quot;XXstoreXX&quot;, dest=&quot;sort_datafile&quot;, help=help_text)
     parser.addini(&quot;sort_datafile&quot;, help=help_text)
 
     group.addoption(&quot;--sort-debug&quot;, action=&quot;store_true&quot;, dest=&quot;sort_debug&quot;, help=argparse.SUPPRESS)
</failure>
			<system-out>    group.addoption(&quot;--sort-datafile&quot;, action=&quot;store&quot;, dest=&quot;sort_datafile&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #413" file="src/pytest_sort/plugin.py" line="63">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -60,7 +60,7 @@
     group.addoption(&quot;--sort-report-times&quot;, action=&quot;store_true&quot;, dest=&quot;sort_report_times&quot;, help=help_text)
 
     help_text = &quot;Location to store pytest-sort data. (default: ./.pytest_sort)&quot;
-    group.addoption(&quot;--sort-datafile&quot;, action=&quot;store&quot;, dest=&quot;sort_datafile&quot;, help=help_text)
+    group.addoption(&quot;--sort-datafile&quot;, action=&quot;store&quot;, dest=&quot;XXsort_datafileXX&quot;, help=help_text)
     parser.addini(&quot;sort_datafile&quot;, help=help_text)
 
     group.addoption(&quot;--sort-debug&quot;, action=&quot;store_true&quot;, dest=&quot;sort_debug&quot;, help=argparse.SUPPRESS)
</failure>
			<system-out>    group.addoption(&quot;--sort-datafile&quot;, action=&quot;store&quot;, dest=&quot;sort_datafile&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #414" file="src/pytest_sort/plugin.py" line="64">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -61,7 +61,7 @@
 
     help_text = &quot;Location to store pytest-sort data. (default: ./.pytest_sort)&quot;
     group.addoption(&quot;--sort-datafile&quot;, action=&quot;store&quot;, dest=&quot;sort_datafile&quot;, help=help_text)
-    parser.addini(&quot;sort_datafile&quot;, help=help_text)
+    parser.addini(&quot;XXsort_datafileXX&quot;, help=help_text)
 
     group.addoption(&quot;--sort-debug&quot;, action=&quot;store_true&quot;, dest=&quot;sort_debug&quot;, help=argparse.SUPPRESS)
 
</failure>
			<system-out>    parser.addini(&quot;sort_datafile&quot;, help=help_text)</system-out>
		</testcase>
		<testcase name="Mutant #415" file="src/pytest_sort/plugin.py" line="66">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -63,7 +63,7 @@
     group.addoption(&quot;--sort-datafile&quot;, action=&quot;store&quot;, dest=&quot;sort_datafile&quot;, help=help_text)
     parser.addini(&quot;sort_datafile&quot;, help=help_text)
 
-    group.addoption(&quot;--sort-debug&quot;, action=&quot;store_true&quot;, dest=&quot;sort_debug&quot;, help=argparse.SUPPRESS)
+    group.addoption(&quot;XX--sort-debugXX&quot;, action=&quot;store_true&quot;, dest=&quot;sort_debug&quot;, help=argparse.SUPPRESS)
 
 
 def pytest_configure(config: pytest.Config) -&gt; None:
</failure>
			<system-out>    group.addoption(&quot;--sort-debug&quot;, action=&quot;store_true&quot;, dest=&quot;sort_debug&quot;, help=argparse.SUPPRESS)</system-out>
		</testcase>
		<testcase name="Mutant #416" file="src/pytest_sort/plugin.py" line="66">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -63,7 +63,7 @@
     group.addoption(&quot;--sort-datafile&quot;, action=&quot;store&quot;, dest=&quot;sort_datafile&quot;, help=help_text)
     parser.addini(&quot;sort_datafile&quot;, help=help_text)
 
-    group.addoption(&quot;--sort-debug&quot;, action=&quot;store_true&quot;, dest=&quot;sort_debug&quot;, help=argparse.SUPPRESS)
+    group.addoption(&quot;--sort-debug&quot;, action=&quot;XXstore_trueXX&quot;, dest=&quot;sort_debug&quot;, help=argparse.SUPPRESS)
 
 
 def pytest_configure(config: pytest.Config) -&gt; None:
</failure>
			<system-out>    group.addoption(&quot;--sort-debug&quot;, action=&quot;store_true&quot;, dest=&quot;sort_debug&quot;, help=argparse.SUPPRESS)</system-out>
		</testcase>
		<testcase name="Mutant #417" file="src/pytest_sort/plugin.py" line="66">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -63,7 +63,7 @@
     group.addoption(&quot;--sort-datafile&quot;, action=&quot;store&quot;, dest=&quot;sort_datafile&quot;, help=help_text)
     parser.addini(&quot;sort_datafile&quot;, help=help_text)
 
-    group.addoption(&quot;--sort-debug&quot;, action=&quot;store_true&quot;, dest=&quot;sort_debug&quot;, help=argparse.SUPPRESS)
+    group.addoption(&quot;--sort-debug&quot;, action=&quot;store_true&quot;, dest=&quot;XXsort_debugXX&quot;, help=argparse.SUPPRESS)
 
 
 def pytest_configure(config: pytest.Config) -&gt; None:
</failure>
			<system-out>    group.addoption(&quot;--sort-debug&quot;, action=&quot;store_true&quot;, dest=&quot;sort_debug&quot;, help=argparse.SUPPRESS)</system-out>
		</testcase>
		<testcase name="Mutant #418" file="src/pytest_sort/plugin.py" line="72">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -69,7 +69,7 @@
 def pytest_configure(config: pytest.Config) -&gt; None:
     &quot;&quot;&quot;pytest_sort: Add markers to pytest.&quot;&quot;&quot;
     config.addinivalue_line(
-        &quot;markers&quot;,
+        &quot;XXmarkersXX&quot;,
         &quot;sort(mode,bucket): Override pytest-sort Options.&quot;,
     )
 
</failure>
			<system-out>        &quot;markers&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #419" file="src/pytest_sort/plugin.py" line="73">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -70,7 +70,7 @@
     &quot;&quot;&quot;pytest_sort: Add markers to pytest.&quot;&quot;&quot;
     config.addinivalue_line(
         &quot;markers&quot;,
-        &quot;sort(mode,bucket): Override pytest-sort Options.&quot;,
+        &quot;XXsort(mode,bucket): Override pytest-sort Options.XX&quot;,
     )
 
     config.addinivalue_line(
</failure>
			<system-out>        &quot;sort(mode,bucket): Override pytest-sort Options.&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #420" file="src/pytest_sort/plugin.py" line="77">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -74,7 +74,7 @@
     )
 
     config.addinivalue_line(
-        &quot;markers&quot;,
+        &quot;XXmarkersXX&quot;,
         &quot;order(item_sort_key): Always use specified Sort Key for this test item.&quot;,
     )
 
</failure>
			<system-out>        &quot;markers&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #421" file="src/pytest_sort/plugin.py" line="78">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -75,7 +75,7 @@
 
     config.addinivalue_line(
         &quot;markers&quot;,
-        &quot;order(item_sort_key): Always use specified Sort Key for this test item.&quot;,
+        &quot;XXorder(item_sort_key): Always use specified Sort Key for this test item.XX&quot;,
     )
 
 
</failure>
			<system-out>        &quot;order(item_sort_key): Always use specified Sort Key for this test item.&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #422" file="src/pytest_sort/plugin.py" line="86">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -83,7 +83,7 @@
     &quot;&quot;&quot;pytest_sort: Build Header for pytest to display.&quot;&quot;&quot;
     SortConfig.from_pytest(config)
 
-    header = &quot;pytest-sort:&quot;
+    header = &quot;XXpytest-sort:XX&quot;
 
     for key, value in SortConfig.header_dict().items():
         header += f&quot;\n  {key}: {value}&quot;
</failure>
			<system-out>    header = &quot;pytest-sort:&quot;</system-out>
		</testcase>
		<testcase name="Mutant #423" file="src/pytest_sort/plugin.py" line="86">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -83,7 +83,7 @@
     &quot;&quot;&quot;pytest_sort: Build Header for pytest to display.&quot;&quot;&quot;
     SortConfig.from_pytest(config)
 
-    header = &quot;pytest-sort:&quot;
+    header = None
 
     for key, value in SortConfig.header_dict().items():
         header += f&quot;\n  {key}: {value}&quot;
</failure>
			<system-out>    header = &quot;pytest-sort:&quot;</system-out>
		</testcase>
		<testcase name="Mutant #424" file="src/pytest_sort/plugin.py" line="89">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -86,7 +86,7 @@
     header = &quot;pytest-sort:&quot;
 
     for key, value in SortConfig.header_dict().items():
-        header += f&quot;\n  {key}: {value}&quot;
+        header = f&quot;\n  {key}: {value}&quot;
 
     return header
 
</failure>
			<system-out>        header += f&quot;\n  {key}: {value}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #425" file="src/pytest_sort/plugin.py" line="89">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -86,7 +86,7 @@
     header = &quot;pytest-sort:&quot;
 
     for key, value in SortConfig.header_dict().items():
-        header += f&quot;\n  {key}: {value}&quot;
+        header -= f&quot;\n  {key}: {value}&quot;
 
     return header
 
</failure>
			<system-out>        header += f&quot;\n  {key}: {value}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #426" file="src/pytest_sort/plugin.py" line="89">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -86,7 +86,7 @@
     header = &quot;pytest-sort:&quot;
 
     for key, value in SortConfig.header_dict().items():
-        header += f&quot;\n  {key}: {value}&quot;
+        header += f&quot;XX\n  {key}: {value}XX&quot;
 
     return header
 
</failure>
			<system-out>        header += f&quot;\n  {key}: {value}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #427" file="src/pytest_sort/plugin.py" line="105">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -102,7 +102,7 @@
     if SortConfig.reset:
         clear_db()
 
-    sort_items(items)
+    sort_items(None)
 
 
 @pytest.hookimpl(hookwrapper=True)
</failure>
			<system-out>    sort_items(items)</system-out>
		</testcase>
		<testcase name="Mutant #428" file="src/pytest_sort/plugin.py" line="108">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -105,7 +105,7 @@
     sort_items(items)
 
 
-@pytest.hookimpl(hookwrapper=True)
+@pytest.hookimpl(hookwrapper=False)
 def pytest_runtest_makereport(item: pytest.Item, call: pytest.CallInfo) -&gt; Generator:
     &quot;&quot;&quot;pytest_sort: Record test runtimes in memory.&quot;&quot;&quot;
     if SortConfig.record and call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):
</failure>
			<system-out>@pytest.hookimpl(hookwrapper=True)</system-out>
		</testcase>
		<testcase name="Mutant #429" file="src/pytest_sort/plugin.py" line="108">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -104,8 +104,6 @@
 
     sort_items(items)
 
-
-@pytest.hookimpl(hookwrapper=True)
 def pytest_runtest_makereport(item: pytest.Item, call: pytest.CallInfo) -&gt; Generator:
     &quot;&quot;&quot;pytest_sort: Record test runtimes in memory.&quot;&quot;&quot;
     if SortConfig.record and call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):
</failure>
			<system-out>@pytest.hookimpl(hookwrapper=True)</system-out>
		</testcase>
		<testcase name="Mutant #430" file="src/pytest_sort/plugin.py" line="111">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -108,7 +108,7 @@
 @pytest.hookimpl(hookwrapper=True)
 def pytest_runtest_makereport(item: pytest.Item, call: pytest.CallInfo) -&gt; Generator:
     &quot;&quot;&quot;pytest_sort: Record test runtimes in memory.&quot;&quot;&quot;
-    if SortConfig.record and call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):
+    if SortConfig.record and call.when not in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):
         duration = int(call.duration * 1_000_000_000)  # convert to ns
 
         if item.nodeid not in SortConfig.recorded_times:
</failure>
			<system-out>    if SortConfig.record and call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):</system-out>
		</testcase>
		<testcase name="Mutant #431" file="src/pytest_sort/plugin.py" line="111">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -108,7 +108,7 @@
 @pytest.hookimpl(hookwrapper=True)
 def pytest_runtest_makereport(item: pytest.Item, call: pytest.CallInfo) -&gt; Generator:
     &quot;&quot;&quot;pytest_sort: Record test runtimes in memory.&quot;&quot;&quot;
-    if SortConfig.record and call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):
+    if SortConfig.record and call.when in (&quot;XXsetupXX&quot;, &quot;call&quot;, &quot;teardown&quot;):
         duration = int(call.duration * 1_000_000_000)  # convert to ns
 
         if item.nodeid not in SortConfig.recorded_times:
</failure>
			<system-out>    if SortConfig.record and call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):</system-out>
		</testcase>
		<testcase name="Mutant #432" file="src/pytest_sort/plugin.py" line="111">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -108,7 +108,7 @@
 @pytest.hookimpl(hookwrapper=True)
 def pytest_runtest_makereport(item: pytest.Item, call: pytest.CallInfo) -&gt; Generator:
     &quot;&quot;&quot;pytest_sort: Record test runtimes in memory.&quot;&quot;&quot;
-    if SortConfig.record and call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):
+    if SortConfig.record and call.when in (&quot;setup&quot;, &quot;XXcallXX&quot;, &quot;teardown&quot;):
         duration = int(call.duration * 1_000_000_000)  # convert to ns
 
         if item.nodeid not in SortConfig.recorded_times:
</failure>
			<system-out>    if SortConfig.record and call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):</system-out>
		</testcase>
		<testcase name="Mutant #433" file="src/pytest_sort/plugin.py" line="111">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -108,7 +108,7 @@
 @pytest.hookimpl(hookwrapper=True)
 def pytest_runtest_makereport(item: pytest.Item, call: pytest.CallInfo) -&gt; Generator:
     &quot;&quot;&quot;pytest_sort: Record test runtimes in memory.&quot;&quot;&quot;
-    if SortConfig.record and call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):
+    if SortConfig.record and call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;XXteardownXX&quot;):
         duration = int(call.duration * 1_000_000_000)  # convert to ns
 
         if item.nodeid not in SortConfig.recorded_times:
</failure>
			<system-out>    if SortConfig.record and call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):</system-out>
		</testcase>
		<testcase name="Mutant #434" file="src/pytest_sort/plugin.py" line="111">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -108,7 +108,7 @@
 @pytest.hookimpl(hookwrapper=True)
 def pytest_runtest_makereport(item: pytest.Item, call: pytest.CallInfo) -&gt; Generator:
     &quot;&quot;&quot;pytest_sort: Record test runtimes in memory.&quot;&quot;&quot;
-    if SortConfig.record and call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):
+    if SortConfig.record or call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):
         duration = int(call.duration * 1_000_000_000)  # convert to ns
 
         if item.nodeid not in SortConfig.recorded_times:
</failure>
			<system-out>    if SortConfig.record and call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):</system-out>
		</testcase>
		<testcase name="Mutant #435" file="src/pytest_sort/plugin.py" line="112">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -109,7 +109,7 @@
 def pytest_runtest_makereport(item: pytest.Item, call: pytest.CallInfo) -&gt; Generator:
     &quot;&quot;&quot;pytest_sort: Record test runtimes in memory.&quot;&quot;&quot;
     if SortConfig.record and call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):
-        duration = int(call.duration * 1_000_000_000)  # convert to ns
+        duration = int(call.duration / 1_000_000_000)  # convert to ns
 
         if item.nodeid not in SortConfig.recorded_times:
             SortConfig.recorded_times[item.nodeid] = {}
</failure>
			<system-out>        duration = int(call.duration * 1_000_000_000)  # convert to ns</system-out>
		</testcase>
		<testcase name="Mutant #436" file="src/pytest_sort/plugin.py" line="112">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -109,7 +109,7 @@
 def pytest_runtest_makereport(item: pytest.Item, call: pytest.CallInfo) -&gt; Generator:
     &quot;&quot;&quot;pytest_sort: Record test runtimes in memory.&quot;&quot;&quot;
     if SortConfig.record and call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):
-        duration = int(call.duration * 1_000_000_000)  # convert to ns
+        duration = int(call.duration * 1000000001)  # convert to ns
 
         if item.nodeid not in SortConfig.recorded_times:
             SortConfig.recorded_times[item.nodeid] = {}
</failure>
			<system-out>        duration = int(call.duration * 1_000_000_000)  # convert to ns</system-out>
		</testcase>
		<testcase name="Mutant #437" file="src/pytest_sort/plugin.py" line="112">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -109,7 +109,7 @@
 def pytest_runtest_makereport(item: pytest.Item, call: pytest.CallInfo) -&gt; Generator:
     &quot;&quot;&quot;pytest_sort: Record test runtimes in memory.&quot;&quot;&quot;
     if SortConfig.record and call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):
-        duration = int(call.duration * 1_000_000_000)  # convert to ns
+        duration = None  # convert to ns
 
         if item.nodeid not in SortConfig.recorded_times:
             SortConfig.recorded_times[item.nodeid] = {}
</failure>
			<system-out>        duration = int(call.duration * 1_000_000_000)  # convert to ns</system-out>
		</testcase>
		<testcase name="Mutant #438" file="src/pytest_sort/plugin.py" line="114">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -111,7 +111,7 @@
     if SortConfig.record and call.when in (&quot;setup&quot;, &quot;call&quot;, &quot;teardown&quot;):
         duration = int(call.duration * 1_000_000_000)  # convert to ns
 
-        if item.nodeid not in SortConfig.recorded_times:
+        if item.nodeid  in SortConfig.recorded_times:
             SortConfig.recorded_times[item.nodeid] = {}
 
         SortConfig.recorded_times[item.nodeid][call.when] = duration
</failure>
			<system-out>        if item.nodeid not in SortConfig.recorded_times:</system-out>
		</testcase>
		<testcase name="Mutant #439" file="src/pytest_sort/plugin.py" line="115">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -112,7 +112,7 @@
         duration = int(call.duration * 1_000_000_000)  # convert to ns
 
         if item.nodeid not in SortConfig.recorded_times:
-            SortConfig.recorded_times[item.nodeid] = {}
+            SortConfig.recorded_times[item.nodeid] = None
 
         SortConfig.recorded_times[item.nodeid][call.when] = duration
 
</failure>
			<system-out>            SortConfig.recorded_times[item.nodeid] = {}</system-out>
		</testcase>
		<testcase name="Mutant #440" file="src/pytest_sort/plugin.py" line="117">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -114,7 +114,7 @@
         if item.nodeid not in SortConfig.recorded_times:
             SortConfig.recorded_times[item.nodeid] = {}
 
-        SortConfig.recorded_times[item.nodeid][call.when] = duration
+        SortConfig.recorded_times[item.nodeid][call.when] = None
 
     yield
 
</failure>
			<system-out>        SortConfig.recorded_times[item.nodeid][call.when] = duration</system-out>
		</testcase>
		<testcase name="Mutant #441" file="src/pytest_sort/plugin.py" line="132">
			<failure type="failure" message="bad_survived">--- src/pytest_sort/plugin.py
+++ src/pytest_sort/plugin.py
@@ -129,5 +129,5 @@
         update_test_case(nodeid, **SortConfig.recorded_times[nodeid])
 
     if SortConfig.report:
-        print_recorded_times_report(terminalreporter)
+        print_recorded_times_report(None)
 
</failure>
			<system-out>        print_recorded_times_report(terminalreporter)</system-out>
		</testcase>
	</testsuite>
</testsuites>

